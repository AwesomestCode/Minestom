package net.minestom.server.item;

import java.lang.Override;
import java.lang.String;
import java.util.List;
import net.kyori.adventure.key.Key;
import net.kyori.adventure.key.Keyed;
import net.minestom.server.instance.block.Block;
import net.minestom.server.network.packet.server.play.EntityEquipmentPacket;
import net.minestom.server.raw_data.RawMaterialData;
import net.minestom.server.registry.Registries;
import net.minestom.server.utils.NamespaceID;
import org.jetbrains.annotations.NotNull;

/**
 * AUTOGENERATED
 */
public class Material implements Keyed {
  public static final Material AIR = new Material(NamespaceID.from("minecraft:air"), (byte) 64);

  public static final Material STONE = new Material(NamespaceID.from("minecraft:stone"), (byte) 64);

  public static final Material GRANITE = new Material(NamespaceID.from("minecraft:granite"), (byte) 64);

  public static final Material POLISHED_GRANITE = new Material(NamespaceID.from("minecraft:polished_granite"), (byte) 64);

  public static final Material DIORITE = new Material(NamespaceID.from("minecraft:diorite"), (byte) 64);

  public static final Material POLISHED_DIORITE = new Material(NamespaceID.from("minecraft:polished_diorite"), (byte) 64);

  public static final Material ANDESITE = new Material(NamespaceID.from("minecraft:andesite"), (byte) 64);

  public static final Material POLISHED_ANDESITE = new Material(NamespaceID.from("minecraft:polished_andesite"), (byte) 64);

  public static final Material GRASS_BLOCK = new Material(NamespaceID.from("minecraft:grass_block"), (byte) 64);

  public static final Material DIRT = new Material(NamespaceID.from("minecraft:dirt"), (byte) 64);

  public static final Material COARSE_DIRT = new Material(NamespaceID.from("minecraft:coarse_dirt"), (byte) 64);

  public static final Material PODZOL = new Material(NamespaceID.from("minecraft:podzol"), (byte) 64);

  public static final Material CRIMSON_NYLIUM = new Material(NamespaceID.from("minecraft:crimson_nylium"), (byte) 64);

  public static final Material WARPED_NYLIUM = new Material(NamespaceID.from("minecraft:warped_nylium"), (byte) 64);

  public static final Material COBBLESTONE = new Material(NamespaceID.from("minecraft:cobblestone"), (byte) 64);

  public static final Material OAK_PLANKS = new Material(NamespaceID.from("minecraft:oak_planks"), (byte) 64);

  public static final Material SPRUCE_PLANKS = new Material(NamespaceID.from("minecraft:spruce_planks"), (byte) 64);

  public static final Material BIRCH_PLANKS = new Material(NamespaceID.from("minecraft:birch_planks"), (byte) 64);

  public static final Material JUNGLE_PLANKS = new Material(NamespaceID.from("minecraft:jungle_planks"), (byte) 64);

  public static final Material ACACIA_PLANKS = new Material(NamespaceID.from("minecraft:acacia_planks"), (byte) 64);

  public static final Material DARK_OAK_PLANKS = new Material(NamespaceID.from("minecraft:dark_oak_planks"), (byte) 64);

  public static final Material CRIMSON_PLANKS = new Material(NamespaceID.from("minecraft:crimson_planks"), (byte) 64);

  public static final Material WARPED_PLANKS = new Material(NamespaceID.from("minecraft:warped_planks"), (byte) 64);

  public static final Material OAK_SAPLING = new Material(NamespaceID.from("minecraft:oak_sapling"), (byte) 64);

  public static final Material SPRUCE_SAPLING = new Material(NamespaceID.from("minecraft:spruce_sapling"), (byte) 64);

  public static final Material BIRCH_SAPLING = new Material(NamespaceID.from("minecraft:birch_sapling"), (byte) 64);

  public static final Material JUNGLE_SAPLING = new Material(NamespaceID.from("minecraft:jungle_sapling"), (byte) 64);

  public static final Material ACACIA_SAPLING = new Material(NamespaceID.from("minecraft:acacia_sapling"), (byte) 64);

  public static final Material DARK_OAK_SAPLING = new Material(NamespaceID.from("minecraft:dark_oak_sapling"), (byte) 64);

  public static final Material BEDROCK = new Material(NamespaceID.from("minecraft:bedrock"), (byte) 64);

  public static final Material SAND = new Material(NamespaceID.from("minecraft:sand"), (byte) 64);

  public static final Material RED_SAND = new Material(NamespaceID.from("minecraft:red_sand"), (byte) 64);

  public static final Material GRAVEL = new Material(NamespaceID.from("minecraft:gravel"), (byte) 64);

  public static final Material GOLD_ORE = new Material(NamespaceID.from("minecraft:gold_ore"), (byte) 64);

  public static final Material IRON_ORE = new Material(NamespaceID.from("minecraft:iron_ore"), (byte) 64);

  public static final Material COAL_ORE = new Material(NamespaceID.from("minecraft:coal_ore"), (byte) 64);

  public static final Material NETHER_GOLD_ORE = new Material(NamespaceID.from("minecraft:nether_gold_ore"), (byte) 64);

  public static final Material OAK_LOG = new Material(NamespaceID.from("minecraft:oak_log"), (byte) 64);

  public static final Material SPRUCE_LOG = new Material(NamespaceID.from("minecraft:spruce_log"), (byte) 64);

  public static final Material BIRCH_LOG = new Material(NamespaceID.from("minecraft:birch_log"), (byte) 64);

  public static final Material JUNGLE_LOG = new Material(NamespaceID.from("minecraft:jungle_log"), (byte) 64);

  public static final Material ACACIA_LOG = new Material(NamespaceID.from("minecraft:acacia_log"), (byte) 64);

  public static final Material DARK_OAK_LOG = new Material(NamespaceID.from("minecraft:dark_oak_log"), (byte) 64);

  public static final Material CRIMSON_STEM = new Material(NamespaceID.from("minecraft:crimson_stem"), (byte) 64);

  public static final Material WARPED_STEM = new Material(NamespaceID.from("minecraft:warped_stem"), (byte) 64);

  public static final Material STRIPPED_OAK_LOG = new Material(NamespaceID.from("minecraft:stripped_oak_log"), (byte) 64);

  public static final Material STRIPPED_SPRUCE_LOG = new Material(NamespaceID.from("minecraft:stripped_spruce_log"), (byte) 64);

  public static final Material STRIPPED_BIRCH_LOG = new Material(NamespaceID.from("minecraft:stripped_birch_log"), (byte) 64);

  public static final Material STRIPPED_JUNGLE_LOG = new Material(NamespaceID.from("minecraft:stripped_jungle_log"), (byte) 64);

  public static final Material STRIPPED_ACACIA_LOG = new Material(NamespaceID.from("minecraft:stripped_acacia_log"), (byte) 64);

  public static final Material STRIPPED_DARK_OAK_LOG = new Material(NamespaceID.from("minecraft:stripped_dark_oak_log"), (byte) 64);

  public static final Material STRIPPED_CRIMSON_STEM = new Material(NamespaceID.from("minecraft:stripped_crimson_stem"), (byte) 64);

  public static final Material STRIPPED_WARPED_STEM = new Material(NamespaceID.from("minecraft:stripped_warped_stem"), (byte) 64);

  public static final Material STRIPPED_OAK_WOOD = new Material(NamespaceID.from("minecraft:stripped_oak_wood"), (byte) 64);

  public static final Material STRIPPED_SPRUCE_WOOD = new Material(NamespaceID.from("minecraft:stripped_spruce_wood"), (byte) 64);

  public static final Material STRIPPED_BIRCH_WOOD = new Material(NamespaceID.from("minecraft:stripped_birch_wood"), (byte) 64);

  public static final Material STRIPPED_JUNGLE_WOOD = new Material(NamespaceID.from("minecraft:stripped_jungle_wood"), (byte) 64);

  public static final Material STRIPPED_ACACIA_WOOD = new Material(NamespaceID.from("minecraft:stripped_acacia_wood"), (byte) 64);

  public static final Material STRIPPED_DARK_OAK_WOOD = new Material(NamespaceID.from("minecraft:stripped_dark_oak_wood"), (byte) 64);

  public static final Material STRIPPED_CRIMSON_HYPHAE = new Material(NamespaceID.from("minecraft:stripped_crimson_hyphae"), (byte) 64);

  public static final Material STRIPPED_WARPED_HYPHAE = new Material(NamespaceID.from("minecraft:stripped_warped_hyphae"), (byte) 64);

  public static final Material OAK_WOOD = new Material(NamespaceID.from("minecraft:oak_wood"), (byte) 64);

  public static final Material SPRUCE_WOOD = new Material(NamespaceID.from("minecraft:spruce_wood"), (byte) 64);

  public static final Material BIRCH_WOOD = new Material(NamespaceID.from("minecraft:birch_wood"), (byte) 64);

  public static final Material JUNGLE_WOOD = new Material(NamespaceID.from("minecraft:jungle_wood"), (byte) 64);

  public static final Material ACACIA_WOOD = new Material(NamespaceID.from("minecraft:acacia_wood"), (byte) 64);

  public static final Material DARK_OAK_WOOD = new Material(NamespaceID.from("minecraft:dark_oak_wood"), (byte) 64);

  public static final Material CRIMSON_HYPHAE = new Material(NamespaceID.from("minecraft:crimson_hyphae"), (byte) 64);

  public static final Material WARPED_HYPHAE = new Material(NamespaceID.from("minecraft:warped_hyphae"), (byte) 64);

  public static final Material OAK_LEAVES = new Material(NamespaceID.from("minecraft:oak_leaves"), (byte) 64);

  public static final Material SPRUCE_LEAVES = new Material(NamespaceID.from("minecraft:spruce_leaves"), (byte) 64);

  public static final Material BIRCH_LEAVES = new Material(NamespaceID.from("minecraft:birch_leaves"), (byte) 64);

  public static final Material JUNGLE_LEAVES = new Material(NamespaceID.from("minecraft:jungle_leaves"), (byte) 64);

  public static final Material ACACIA_LEAVES = new Material(NamespaceID.from("minecraft:acacia_leaves"), (byte) 64);

  public static final Material DARK_OAK_LEAVES = new Material(NamespaceID.from("minecraft:dark_oak_leaves"), (byte) 64);

  public static final Material SPONGE = new Material(NamespaceID.from("minecraft:sponge"), (byte) 64);

  public static final Material WET_SPONGE = new Material(NamespaceID.from("minecraft:wet_sponge"), (byte) 64);

  public static final Material GLASS = new Material(NamespaceID.from("minecraft:glass"), (byte) 64);

  public static final Material LAPIS_ORE = new Material(NamespaceID.from("minecraft:lapis_ore"), (byte) 64);

  public static final Material LAPIS_BLOCK = new Material(NamespaceID.from("minecraft:lapis_block"), (byte) 64);

  public static final Material DISPENSER = new Material(NamespaceID.from("minecraft:dispenser"), (byte) 64);

  public static final Material SANDSTONE = new Material(NamespaceID.from("minecraft:sandstone"), (byte) 64);

  public static final Material CHISELED_SANDSTONE = new Material(NamespaceID.from("minecraft:chiseled_sandstone"), (byte) 64);

  public static final Material CUT_SANDSTONE = new Material(NamespaceID.from("minecraft:cut_sandstone"), (byte) 64);

  public static final Material NOTE_BLOCK = new Material(NamespaceID.from("minecraft:note_block"), (byte) 64);

  public static final Material POWERED_RAIL = new Material(NamespaceID.from("minecraft:powered_rail"), (byte) 64);

  public static final Material DETECTOR_RAIL = new Material(NamespaceID.from("minecraft:detector_rail"), (byte) 64);

  public static final Material STICKY_PISTON = new Material(NamespaceID.from("minecraft:sticky_piston"), (byte) 64);

  public static final Material COBWEB = new Material(NamespaceID.from("minecraft:cobweb"), (byte) 64);

  public static final Material GRASS = new Material(NamespaceID.from("minecraft:grass"), (byte) 64);

  public static final Material FERN = new Material(NamespaceID.from("minecraft:fern"), (byte) 64);

  public static final Material DEAD_BUSH = new Material(NamespaceID.from("minecraft:dead_bush"), (byte) 64);

  public static final Material SEAGRASS = new Material(NamespaceID.from("minecraft:seagrass"), (byte) 64);

  public static final Material SEA_PICKLE = new Material(NamespaceID.from("minecraft:sea_pickle"), (byte) 64);

  public static final Material PISTON = new Material(NamespaceID.from("minecraft:piston"), (byte) 64);

  public static final Material WHITE_WOOL = new Material(NamespaceID.from("minecraft:white_wool"), (byte) 64);

  public static final Material ORANGE_WOOL = new Material(NamespaceID.from("minecraft:orange_wool"), (byte) 64);

  public static final Material MAGENTA_WOOL = new Material(NamespaceID.from("minecraft:magenta_wool"), (byte) 64);

  public static final Material LIGHT_BLUE_WOOL = new Material(NamespaceID.from("minecraft:light_blue_wool"), (byte) 64);

  public static final Material YELLOW_WOOL = new Material(NamespaceID.from("minecraft:yellow_wool"), (byte) 64);

  public static final Material LIME_WOOL = new Material(NamespaceID.from("minecraft:lime_wool"), (byte) 64);

  public static final Material PINK_WOOL = new Material(NamespaceID.from("minecraft:pink_wool"), (byte) 64);

  public static final Material GRAY_WOOL = new Material(NamespaceID.from("minecraft:gray_wool"), (byte) 64);

  public static final Material LIGHT_GRAY_WOOL = new Material(NamespaceID.from("minecraft:light_gray_wool"), (byte) 64);

  public static final Material CYAN_WOOL = new Material(NamespaceID.from("minecraft:cyan_wool"), (byte) 64);

  public static final Material PURPLE_WOOL = new Material(NamespaceID.from("minecraft:purple_wool"), (byte) 64);

  public static final Material BLUE_WOOL = new Material(NamespaceID.from("minecraft:blue_wool"), (byte) 64);

  public static final Material BROWN_WOOL = new Material(NamespaceID.from("minecraft:brown_wool"), (byte) 64);

  public static final Material GREEN_WOOL = new Material(NamespaceID.from("minecraft:green_wool"), (byte) 64);

  public static final Material RED_WOOL = new Material(NamespaceID.from("minecraft:red_wool"), (byte) 64);

  public static final Material BLACK_WOOL = new Material(NamespaceID.from("minecraft:black_wool"), (byte) 64);

  public static final Material DANDELION = new Material(NamespaceID.from("minecraft:dandelion"), (byte) 64);

  public static final Material POPPY = new Material(NamespaceID.from("minecraft:poppy"), (byte) 64);

  public static final Material BLUE_ORCHID = new Material(NamespaceID.from("minecraft:blue_orchid"), (byte) 64);

  public static final Material ALLIUM = new Material(NamespaceID.from("minecraft:allium"), (byte) 64);

  public static final Material AZURE_BLUET = new Material(NamespaceID.from("minecraft:azure_bluet"), (byte) 64);

  public static final Material RED_TULIP = new Material(NamespaceID.from("minecraft:red_tulip"), (byte) 64);

  public static final Material ORANGE_TULIP = new Material(NamespaceID.from("minecraft:orange_tulip"), (byte) 64);

  public static final Material WHITE_TULIP = new Material(NamespaceID.from("minecraft:white_tulip"), (byte) 64);

  public static final Material PINK_TULIP = new Material(NamespaceID.from("minecraft:pink_tulip"), (byte) 64);

  public static final Material OXEYE_DAISY = new Material(NamespaceID.from("minecraft:oxeye_daisy"), (byte) 64);

  public static final Material CORNFLOWER = new Material(NamespaceID.from("minecraft:cornflower"), (byte) 64);

  public static final Material LILY_OF_THE_VALLEY = new Material(NamespaceID.from("minecraft:lily_of_the_valley"), (byte) 64);

  public static final Material WITHER_ROSE = new Material(NamespaceID.from("minecraft:wither_rose"), (byte) 64);

  public static final Material BROWN_MUSHROOM = new Material(NamespaceID.from("minecraft:brown_mushroom"), (byte) 64);

  public static final Material RED_MUSHROOM = new Material(NamespaceID.from("minecraft:red_mushroom"), (byte) 64);

  public static final Material CRIMSON_FUNGUS = new Material(NamespaceID.from("minecraft:crimson_fungus"), (byte) 64);

  public static final Material WARPED_FUNGUS = new Material(NamespaceID.from("minecraft:warped_fungus"), (byte) 64);

  public static final Material CRIMSON_ROOTS = new Material(NamespaceID.from("minecraft:crimson_roots"), (byte) 64);

  public static final Material WARPED_ROOTS = new Material(NamespaceID.from("minecraft:warped_roots"), (byte) 64);

  public static final Material NETHER_SPROUTS = new Material(NamespaceID.from("minecraft:nether_sprouts"), (byte) 64);

  public static final Material WEEPING_VINES = new Material(NamespaceID.from("minecraft:weeping_vines"), (byte) 64);

  public static final Material TWISTING_VINES = new Material(NamespaceID.from("minecraft:twisting_vines"), (byte) 64);

  public static final Material SUGAR_CANE = new Material(NamespaceID.from("minecraft:sugar_cane"), (byte) 64);

  public static final Material KELP = new Material(NamespaceID.from("minecraft:kelp"), (byte) 64);

  public static final Material BAMBOO = new Material(NamespaceID.from("minecraft:bamboo"), (byte) 64);

  public static final Material GOLD_BLOCK = new Material(NamespaceID.from("minecraft:gold_block"), (byte) 64);

  public static final Material IRON_BLOCK = new Material(NamespaceID.from("minecraft:iron_block"), (byte) 64);

  public static final Material OAK_SLAB = new Material(NamespaceID.from("minecraft:oak_slab"), (byte) 64);

  public static final Material SPRUCE_SLAB = new Material(NamespaceID.from("minecraft:spruce_slab"), (byte) 64);

  public static final Material BIRCH_SLAB = new Material(NamespaceID.from("minecraft:birch_slab"), (byte) 64);

  public static final Material JUNGLE_SLAB = new Material(NamespaceID.from("minecraft:jungle_slab"), (byte) 64);

  public static final Material ACACIA_SLAB = new Material(NamespaceID.from("minecraft:acacia_slab"), (byte) 64);

  public static final Material DARK_OAK_SLAB = new Material(NamespaceID.from("minecraft:dark_oak_slab"), (byte) 64);

  public static final Material CRIMSON_SLAB = new Material(NamespaceID.from("minecraft:crimson_slab"), (byte) 64);

  public static final Material WARPED_SLAB = new Material(NamespaceID.from("minecraft:warped_slab"), (byte) 64);

  public static final Material STONE_SLAB = new Material(NamespaceID.from("minecraft:stone_slab"), (byte) 64);

  public static final Material SMOOTH_STONE_SLAB = new Material(NamespaceID.from("minecraft:smooth_stone_slab"), (byte) 64);

  public static final Material SANDSTONE_SLAB = new Material(NamespaceID.from("minecraft:sandstone_slab"), (byte) 64);

  public static final Material CUT_STANDSTONE_SLAB = new Material(NamespaceID.from("minecraft:cut_sandstone_slab"), (byte) 64);

  public static final Material PETRIFIED_OAK_SLAB = new Material(NamespaceID.from("minecraft:petrified_oak_slab"), (byte) 64);

  public static final Material COBBLESTONE_SLAB = new Material(NamespaceID.from("minecraft:cobblestone_slab"), (byte) 64);

  public static final Material BRICK_SLAB = new Material(NamespaceID.from("minecraft:brick_slab"), (byte) 64);

  public static final Material STONE_BRICK_SLAB = new Material(NamespaceID.from("minecraft:stone_brick_slab"), (byte) 64);

  public static final Material NETHER_BRICK_SLAB = new Material(NamespaceID.from("minecraft:nether_brick_slab"), (byte) 64);

  public static final Material QUARTZ_SLAB = new Material(NamespaceID.from("minecraft:quartz_slab"), (byte) 64);

  public static final Material RED_SANDSTONE_SLAB = new Material(NamespaceID.from("minecraft:red_sandstone_slab"), (byte) 64);

  public static final Material CUT_RED_SANDSTONE_SLAB = new Material(NamespaceID.from("minecraft:cut_red_sandstone_slab"), (byte) 64);

  public static final Material PURPUR_SLAB = new Material(NamespaceID.from("minecraft:purpur_slab"), (byte) 64);

  public static final Material PRISMARINE_SLAB = new Material(NamespaceID.from("minecraft:prismarine_slab"), (byte) 64);

  public static final Material PRISMARINE_BRICK_SLAB = new Material(NamespaceID.from("minecraft:prismarine_brick_slab"), (byte) 64);

  public static final Material DARK_PRISMARINE_SLAB = new Material(NamespaceID.from("minecraft:dark_prismarine_slab"), (byte) 64);

  public static final Material SMOOTH_QUARTZ = new Material(NamespaceID.from("minecraft:smooth_quartz"), (byte) 64);

  public static final Material SMOOTH_RED_SANDSTONE = new Material(NamespaceID.from("minecraft:smooth_red_sandstone"), (byte) 64);

  public static final Material SMOOTH_SANDSTONE = new Material(NamespaceID.from("minecraft:smooth_sandstone"), (byte) 64);

  public static final Material SMOOTH_STONE = new Material(NamespaceID.from("minecraft:smooth_stone"), (byte) 64);

  public static final Material BRICKS = new Material(NamespaceID.from("minecraft:bricks"), (byte) 64);

  public static final Material TNT = new Material(NamespaceID.from("minecraft:tnt"), (byte) 64);

  public static final Material BOOKSHELF = new Material(NamespaceID.from("minecraft:bookshelf"), (byte) 64);

  public static final Material MOSSY_COBBLESTONE = new Material(NamespaceID.from("minecraft:mossy_cobblestone"), (byte) 64);

  public static final Material OBSIDIAN = new Material(NamespaceID.from("minecraft:obsidian"), (byte) 64);

  public static final Material TORCH = new Material(NamespaceID.from("minecraft:torch"), (byte) 64);

  public static final Material END_ROD = new Material(NamespaceID.from("minecraft:end_rod"), (byte) 64);

  public static final Material CHORUS_PLANT = new Material(NamespaceID.from("minecraft:chorus_plant"), (byte) 64);

  public static final Material CHORUS_FLOWER = new Material(NamespaceID.from("minecraft:chorus_flower"), (byte) 64);

  public static final Material PURPUR_BLOCK = new Material(NamespaceID.from("minecraft:purpur_block"), (byte) 64);

  public static final Material PURPUR_PILLAR = new Material(NamespaceID.from("minecraft:purpur_pillar"), (byte) 64);

  public static final Material PURPUR_STAIRS = new Material(NamespaceID.from("minecraft:purpur_stairs"), (byte) 64);

  public static final Material SPAWNER = new Material(NamespaceID.from("minecraft:spawner"), (byte) 64);

  public static final Material OAK_STAIRS = new Material(NamespaceID.from("minecraft:oak_stairs"), (byte) 64);

  public static final Material CHEST = new Material(NamespaceID.from("minecraft:chest"), (byte) 64);

  public static final Material DIAMOND_ORE = new Material(NamespaceID.from("minecraft:diamond_ore"), (byte) 64);

  public static final Material DIAMOND_BLOCK = new Material(NamespaceID.from("minecraft:diamond_block"), (byte) 64);

  public static final Material CRAFTING_TABLE = new Material(NamespaceID.from("minecraft:crafting_table"), (byte) 64);

  public static final Material FARMLAND = new Material(NamespaceID.from("minecraft:farmland"), (byte) 64);

  public static final Material FURNACE = new Material(NamespaceID.from("minecraft:furnace"), (byte) 64);

  public static final Material LADDER = new Material(NamespaceID.from("minecraft:ladder"), (byte) 64);

  public static final Material RAIL = new Material(NamespaceID.from("minecraft:rail"), (byte) 64);

  public static final Material COBBLESTONE_STAIRS = new Material(NamespaceID.from("minecraft:cobblestone_stairs"), (byte) 64);

  public static final Material LEVER = new Material(NamespaceID.from("minecraft:lever"), (byte) 64);

  public static final Material STONE_PRESSURE_PLATE = new Material(NamespaceID.from("minecraft:stone_pressure_plate"), (byte) 64);

  public static final Material OAK_PRESSURE_PLATE = new Material(NamespaceID.from("minecraft:oak_pressure_plate"), (byte) 64);

  public static final Material SPRUCE_PRESSURE_PLATE = new Material(NamespaceID.from("minecraft:spruce_pressure_plate"), (byte) 64);

  public static final Material BIRCH_PRESSURE_PLATE = new Material(NamespaceID.from("minecraft:birch_pressure_plate"), (byte) 64);

  public static final Material JUNGLE_PRESSURE_PLATE = new Material(NamespaceID.from("minecraft:jungle_pressure_plate"), (byte) 64);

  public static final Material ACACIA_PRESSURE_PLATE = new Material(NamespaceID.from("minecraft:acacia_pressure_plate"), (byte) 64);

  public static final Material DARK_OAK_PRESSURE_PLATE = new Material(NamespaceID.from("minecraft:dark_oak_pressure_plate"), (byte) 64);

  public static final Material CRIMSON_PRESSURE_PLATE = new Material(NamespaceID.from("minecraft:crimson_pressure_plate"), (byte) 64);

  public static final Material WARPED_PRESSURE_PLATE = new Material(NamespaceID.from("minecraft:warped_pressure_plate"), (byte) 64);

  public static final Material POLISHED_BLACKSTONE_PRESSURE_PLATE = new Material(NamespaceID.from("minecraft:polished_blackstone_pressure_plate"), (byte) 64);

  public static final Material REDSTONE_ORE = new Material(NamespaceID.from("minecraft:redstone_ore"), (byte) 64);

  public static final Material REDSTONE_TORCH = new Material(NamespaceID.from("minecraft:redstone_torch"), (byte) 64);

  public static final Material SNOW = new Material(NamespaceID.from("minecraft:snow"), (byte) 64);

  public static final Material ICE = new Material(NamespaceID.from("minecraft:ice"), (byte) 64);

  public static final Material SNOW_BLOCK = new Material(NamespaceID.from("minecraft:snow_block"), (byte) 64);

  public static final Material CACTUS = new Material(NamespaceID.from("minecraft:cactus"), (byte) 64);

  public static final Material CLAY = new Material(NamespaceID.from("minecraft:clay"), (byte) 64);

  public static final Material JUKEBOX = new Material(NamespaceID.from("minecraft:jukebox"), (byte) 64);

  public static final Material OAK_FENCE = new Material(NamespaceID.from("minecraft:oak_fence"), (byte) 64);

  public static final Material SPRUCE_FENCE = new Material(NamespaceID.from("minecraft:spruce_fence"), (byte) 64);

  public static final Material BIRCH_FENCE = new Material(NamespaceID.from("minecraft:birch_fence"), (byte) 64);

  public static final Material JUNGLE_FENCE = new Material(NamespaceID.from("minecraft:jungle_fence"), (byte) 64);

  public static final Material ACACIA_FENCE = new Material(NamespaceID.from("minecraft:acacia_fence"), (byte) 64);

  public static final Material DARK_OAK_FENCE = new Material(NamespaceID.from("minecraft:dark_oak_fence"), (byte) 64);

  public static final Material CRIMSON_FENCE = new Material(NamespaceID.from("minecraft:crimson_fence"), (byte) 64);

  public static final Material WARPED_FENCE = new Material(NamespaceID.from("minecraft:warped_fence"), (byte) 64);

  public static final Material PUMPKIN = new Material(NamespaceID.from("minecraft:pumpkin"), (byte) 64);

  public static final Material CARVED_PUMPKIN = new Material(NamespaceID.from("minecraft:carved_pumpkin"), (byte) 64);

  public static final Material NETHERRACK = new Material(NamespaceID.from("minecraft:netherrack"), (byte) 64);

  public static final Material SOUL_SAND = new Material(NamespaceID.from("minecraft:soul_sand"), (byte) 64);

  public static final Material SOUL_SOIL = new Material(NamespaceID.from("minecraft:soul_soil"), (byte) 64);

  public static final Material BASALT = new Material(NamespaceID.from("minecraft:basalt"), (byte) 64);

  public static final Material POLISHED_BASALT = new Material(NamespaceID.from("minecraft:polished_basalt"), (byte) 64);

  public static final Material SOUL_TORCH = new Material(NamespaceID.from("minecraft:soul_torch"), (byte) 64);

  public static final Material GLOWSTONE = new Material(NamespaceID.from("minecraft:glowstone"), (byte) 64);

  public static final Material JACK_O_LANTERN = new Material(NamespaceID.from("minecraft:jack_o_lantern"), (byte) 64);

  public static final Material OAK_TRAPDOOR = new Material(NamespaceID.from("minecraft:oak_trapdoor"), (byte) 64);

  public static final Material SPRUCE_TRAPDOOR = new Material(NamespaceID.from("minecraft:spruce_trapdoor"), (byte) 64);

  public static final Material BIRCH_TRAPDOOR = new Material(NamespaceID.from("minecraft:birch_trapdoor"), (byte) 64);

  public static final Material JUNGLE_TRAPDOOR = new Material(NamespaceID.from("minecraft:jungle_trapdoor"), (byte) 64);

  public static final Material ACACIA_TRAPDOOR = new Material(NamespaceID.from("minecraft:acacia_trapdoor"), (byte) 64);

  public static final Material DARK_OAK_TRAPDOOR = new Material(NamespaceID.from("minecraft:dark_oak_trapdoor"), (byte) 64);

  public static final Material CRIMSON_TRAPDOOR = new Material(NamespaceID.from("minecraft:crimson_trapdoor"), (byte) 64);

  public static final Material WARPED_TRAPDOOR = new Material(NamespaceID.from("minecraft:warped_trapdoor"), (byte) 64);

  public static final Material INFESTED_STONE = new Material(NamespaceID.from("minecraft:infested_stone"), (byte) 64);

  public static final Material INFESTED_COBBLESTONE = new Material(NamespaceID.from("minecraft:infested_cobblestone"), (byte) 64);

  public static final Material INFESTED_STONE_BRICKS = new Material(NamespaceID.from("minecraft:infested_stone_bricks"), (byte) 64);

  public static final Material INFESTED_MOSSY_STONE_BRICKS = new Material(NamespaceID.from("minecraft:infested_mossy_stone_bricks"), (byte) 64);

  public static final Material INFESTED_CRACKED_STONE_BRICKS = new Material(NamespaceID.from("minecraft:infested_cracked_stone_bricks"), (byte) 64);

  public static final Material INFESTED_CHISELED_STONE_BRICKS = new Material(NamespaceID.from("minecraft:infested_chiseled_stone_bricks"), (byte) 64);

  public static final Material STONE_BRICKS = new Material(NamespaceID.from("minecraft:stone_bricks"), (byte) 64);

  public static final Material MOSSY_STONE_BRICKS = new Material(NamespaceID.from("minecraft:mossy_stone_bricks"), (byte) 64);

  public static final Material CRACKED_STONE_BRICKS = new Material(NamespaceID.from("minecraft:cracked_stone_bricks"), (byte) 64);

  public static final Material CHISELED_STONE_BRICKS = new Material(NamespaceID.from("minecraft:chiseled_stone_bricks"), (byte) 64);

  public static final Material BROWN_MUSHROOM_BLOCK = new Material(NamespaceID.from("minecraft:brown_mushroom_block"), (byte) 64);

  public static final Material RED_MUSHROOM_BLOCK = new Material(NamespaceID.from("minecraft:red_mushroom_block"), (byte) 64);

  public static final Material MUSHROOM_STEM = new Material(NamespaceID.from("minecraft:mushroom_stem"), (byte) 64);

  public static final Material IRON_BARS = new Material(NamespaceID.from("minecraft:iron_bars"), (byte) 64);

  public static final Material CHAIN = new Material(NamespaceID.from("minecraft:chain"), (byte) 64);

  public static final Material GLASS_PANE = new Material(NamespaceID.from("minecraft:glass_pane"), (byte) 64);

  public static final Material MELON = new Material(NamespaceID.from("minecraft:melon"), (byte) 64);

  public static final Material VINE = new Material(NamespaceID.from("minecraft:vine"), (byte) 64);

  public static final Material OAK_FENCE_GATE = new Material(NamespaceID.from("minecraft:oak_fence_gate"), (byte) 64);

  public static final Material SPRUCE_FENCE_GATE = new Material(NamespaceID.from("minecraft:spruce_fence_gate"), (byte) 64);

  public static final Material BIRCH_FENCE_GATE = new Material(NamespaceID.from("minecraft:birch_fence_gate"), (byte) 64);

  public static final Material JUNGLE_FENCE_GATE = new Material(NamespaceID.from("minecraft:jungle_fence_gate"), (byte) 64);

  public static final Material ACACIA_FENCE_GATE = new Material(NamespaceID.from("minecraft:acacia_fence_gate"), (byte) 64);

  public static final Material DARK_OAK_FENCE_GATE = new Material(NamespaceID.from("minecraft:dark_oak_fence_gate"), (byte) 64);

  public static final Material CRIMSON_FENCE_GATE = new Material(NamespaceID.from("minecraft:crimson_fence_gate"), (byte) 64);

  public static final Material WARPED_FENCE_GATE = new Material(NamespaceID.from("minecraft:warped_fence_gate"), (byte) 64);

  public static final Material BRICK_STAIRS = new Material(NamespaceID.from("minecraft:brick_stairs"), (byte) 64);

  public static final Material STONE_BRICK_STAIRS = new Material(NamespaceID.from("minecraft:stone_brick_stairs"), (byte) 64);

  public static final Material MYCELIUM = new Material(NamespaceID.from("minecraft:mycelium"), (byte) 64);

  public static final Material LILY_PAD = new Material(NamespaceID.from("minecraft:lily_pad"), (byte) 64);

  public static final Material NETHER_BRICKS = new Material(NamespaceID.from("minecraft:nether_bricks"), (byte) 64);

  public static final Material CRACKED_NETHER_BRICKS = new Material(NamespaceID.from("minecraft:cracked_nether_bricks"), (byte) 64);

  public static final Material CHISELED_NETHER_BRICKS = new Material(NamespaceID.from("minecraft:chiseled_nether_bricks"), (byte) 64);

  public static final Material NETHER_BRICK_FENCE = new Material(NamespaceID.from("minecraft:nether_brick_fence"), (byte) 64);

  public static final Material NETHER_BRICK_STAIRS = new Material(NamespaceID.from("minecraft:nether_brick_stairs"), (byte) 64);

  public static final Material ENCHANTING_TABLE = new Material(NamespaceID.from("minecraft:enchanting_table"), (byte) 64);

  public static final Material END_PORTAL_FRAME = new Material(NamespaceID.from("minecraft:end_portal_frame"), (byte) 64);

  public static final Material END_STONE = new Material(NamespaceID.from("minecraft:end_stone"), (byte) 64);

  public static final Material END_STONE_BRICKS = new Material(NamespaceID.from("minecraft:end_stone_bricks"), (byte) 64);

  public static final Material DRAGON_EGG = new Material(NamespaceID.from("minecraft:dragon_egg"), (byte) 64);

  public static final Material REDSTONE_LAMP = new Material(NamespaceID.from("minecraft:redstone_lamp"), (byte) 64);

  public static final Material SANDSTONE_STAIRS = new Material(NamespaceID.from("minecraft:sandstone_stairs"), (byte) 64);

  public static final Material EMERALD_ORE = new Material(NamespaceID.from("minecraft:emerald_ore"), (byte) 64);

  public static final Material ENDER_CHEST = new Material(NamespaceID.from("minecraft:ender_chest"), (byte) 64);

  public static final Material TRIPWIRE_HOOK = new Material(NamespaceID.from("minecraft:tripwire_hook"), (byte) 64);

  public static final Material EMERALD_BLOCK = new Material(NamespaceID.from("minecraft:emerald_block"), (byte) 64);

  public static final Material SPRUCE_STAIRS = new Material(NamespaceID.from("minecraft:spruce_stairs"), (byte) 64);

  public static final Material BIRCH_STAIRS = new Material(NamespaceID.from("minecraft:birch_stairs"), (byte) 64);

  public static final Material JUNGLE_STAIRS = new Material(NamespaceID.from("minecraft:jungle_stairs"), (byte) 64);

  public static final Material CRIMSON_STAIRS = new Material(NamespaceID.from("minecraft:crimson_stairs"), (byte) 64);

  public static final Material WARPED_STAIRS = new Material(NamespaceID.from("minecraft:warped_stairs"), (byte) 64);

  public static final Material COMMAND_BLOCK = new Material(NamespaceID.from("minecraft:command_block"), (byte) 64);

  public static final Material BEACON = new Material(NamespaceID.from("minecraft:beacon"), (byte) 64);

  public static final Material COBBLESTONE_WALL = new Material(NamespaceID.from("minecraft:cobblestone_wall"), (byte) 64);

  public static final Material MOSSY_COBBLESTONE_WALL = new Material(NamespaceID.from("minecraft:mossy_cobblestone_wall"), (byte) 64);

  public static final Material BRICK_WALL = new Material(NamespaceID.from("minecraft:brick_wall"), (byte) 64);

  public static final Material PRISMARINE_WALL = new Material(NamespaceID.from("minecraft:prismarine_wall"), (byte) 64);

  public static final Material RED_SANDSTONE_WALL = new Material(NamespaceID.from("minecraft:red_sandstone_wall"), (byte) 64);

  public static final Material MOSSY_STONE_BRICK_WALL = new Material(NamespaceID.from("minecraft:mossy_stone_brick_wall"), (byte) 64);

  public static final Material GRANITE_WALL = new Material(NamespaceID.from("minecraft:granite_wall"), (byte) 64);

  public static final Material STONE_BRICK_WALL = new Material(NamespaceID.from("minecraft:stone_brick_wall"), (byte) 64);

  public static final Material NETHER_BRICK_WALL = new Material(NamespaceID.from("minecraft:nether_brick_wall"), (byte) 64);

  public static final Material ANDESITE_WALL = new Material(NamespaceID.from("minecraft:andesite_wall"), (byte) 64);

  public static final Material RED_NETHER_BRICK_WALL = new Material(NamespaceID.from("minecraft:red_nether_brick_wall"), (byte) 64);

  public static final Material SANDSTONE_WALL = new Material(NamespaceID.from("minecraft:sandstone_wall"), (byte) 64);

  public static final Material END_STONE_BRICK_WALL = new Material(NamespaceID.from("minecraft:end_stone_brick_wall"), (byte) 64);

  public static final Material DIORITE_WALL = new Material(NamespaceID.from("minecraft:diorite_wall"), (byte) 64);

  public static final Material BLACKSTONE_WALL = new Material(NamespaceID.from("minecraft:blackstone_wall"), (byte) 64);

  public static final Material POLISHED_BLACKSTONE_WALL = new Material(NamespaceID.from("minecraft:polished_blackstone_wall"), (byte) 64);

  public static final Material POLISHED_BLACKSTONE_BRICK_WALL = new Material(NamespaceID.from("minecraft:polished_blackstone_brick_wall"), (byte) 64);

  public static final Material STONE_BUTTON = new Material(NamespaceID.from("minecraft:stone_button"), (byte) 64);

  public static final Material OAK_BUTTON = new Material(NamespaceID.from("minecraft:oak_button"), (byte) 64);

  public static final Material SPRUCE_BUTTON = new Material(NamespaceID.from("minecraft:spruce_button"), (byte) 64);

  public static final Material BIRCH_BUTTON = new Material(NamespaceID.from("minecraft:birch_button"), (byte) 64);

  public static final Material JUNGLE_BUTTON = new Material(NamespaceID.from("minecraft:jungle_button"), (byte) 64);

  public static final Material ACACIA_BUTTON = new Material(NamespaceID.from("minecraft:acacia_button"), (byte) 64);

  public static final Material DARK_OAK_BUTTON = new Material(NamespaceID.from("minecraft:dark_oak_button"), (byte) 64);

  public static final Material CRIMSON_BUTTON = new Material(NamespaceID.from("minecraft:crimson_button"), (byte) 64);

  public static final Material WARPED_BUTTON = new Material(NamespaceID.from("minecraft:warped_button"), (byte) 64);

  public static final Material POLISHED_BLACKSTONE_BUTTON = new Material(NamespaceID.from("minecraft:polished_blackstone_button"), (byte) 64);

  public static final Material ANVIL = new Material(NamespaceID.from("minecraft:anvil"), (byte) 64);

  public static final Material CHIPPED_ANVIL = new Material(NamespaceID.from("minecraft:chipped_anvil"), (byte) 64);

  public static final Material DAMAGED_ANVIL = new Material(NamespaceID.from("minecraft:damaged_anvil"), (byte) 64);

  public static final Material TRAPPED_CHEST = new Material(NamespaceID.from("minecraft:trapped_chest"), (byte) 64);

  public static final Material LIGHT_WEIGHTED_PRESSURE_PLATE = new Material(NamespaceID.from("minecraft:light_weighted_pressure_plate"), (byte) 64);

  public static final Material HEAVY_WEIGHTED_PRESSURE_PLATE = new Material(NamespaceID.from("minecraft:heavy_weighted_pressure_plate"), (byte) 64);

  public static final Material DAYLIGHT_DETECTOR = new Material(NamespaceID.from("minecraft:daylight_detector"), (byte) 64);

  public static final Material REDSTONE_BLOCK = new Material(NamespaceID.from("minecraft:redstone_block"), (byte) 64);

  public static final Material NETHER_QUARTZ_ORE = new Material(NamespaceID.from("minecraft:nether_quartz_ore"), (byte) 64);

  public static final Material HOPPER = new Material(NamespaceID.from("minecraft:hopper"), (byte) 64);

  public static final Material CHISELED_QUARTZ_BLOCK = new Material(NamespaceID.from("minecraft:chiseled_quartz_block"), (byte) 64);

  public static final Material QUARTZ_BLOCK = new Material(NamespaceID.from("minecraft:quartz_block"), (byte) 64);

  public static final Material QUARTZ_BRICKS = new Material(NamespaceID.from("minecraft:quartz_bricks"), (byte) 64);

  public static final Material QUARTZ_PILLAR = new Material(NamespaceID.from("minecraft:quartz_pillar"), (byte) 64);

  public static final Material QUARTZ_STAIRS = new Material(NamespaceID.from("minecraft:quartz_stairs"), (byte) 64);

  public static final Material ACTIVATOR_RAIL = new Material(NamespaceID.from("minecraft:activator_rail"), (byte) 64);

  public static final Material DROPPER = new Material(NamespaceID.from("minecraft:dropper"), (byte) 64);

  public static final Material WHITE_TERRACOTTA = new Material(NamespaceID.from("minecraft:white_terracotta"), (byte) 64);

  public static final Material ORANGE_TERRACOTTA = new Material(NamespaceID.from("minecraft:orange_terracotta"), (byte) 64);

  public static final Material MAGENTA_TERRACOTTA = new Material(NamespaceID.from("minecraft:magenta_terracotta"), (byte) 64);

  public static final Material LIGHT_BLUE_TERRACOTTA = new Material(NamespaceID.from("minecraft:light_blue_terracotta"), (byte) 64);

  public static final Material YELLOW_TERRACOTTA = new Material(NamespaceID.from("minecraft:yellow_terracotta"), (byte) 64);

  public static final Material LIME_TERRACOTTA = new Material(NamespaceID.from("minecraft:lime_terracotta"), (byte) 64);

  public static final Material PINK_TERRACOTTA = new Material(NamespaceID.from("minecraft:pink_terracotta"), (byte) 64);

  public static final Material GRAY_TERRACOTTA = new Material(NamespaceID.from("minecraft:gray_terracotta"), (byte) 64);

  public static final Material LIGHT_GRAY_TERRACOTTA = new Material(NamespaceID.from("minecraft:light_gray_terracotta"), (byte) 64);

  public static final Material CYAN_TERRACOTTA = new Material(NamespaceID.from("minecraft:cyan_terracotta"), (byte) 64);

  public static final Material PURPLE_TERRACOTTA = new Material(NamespaceID.from("minecraft:purple_terracotta"), (byte) 64);

  public static final Material BLUE_TERRACOTTA = new Material(NamespaceID.from("minecraft:blue_terracotta"), (byte) 64);

  public static final Material BROWN_TERRACOTTA = new Material(NamespaceID.from("minecraft:brown_terracotta"), (byte) 64);

  public static final Material GREEN_TERRACOTTA = new Material(NamespaceID.from("minecraft:green_terracotta"), (byte) 64);

  public static final Material RED_TERRACOTTA = new Material(NamespaceID.from("minecraft:red_terracotta"), (byte) 64);

  public static final Material BLACK_TERRACOTTA = new Material(NamespaceID.from("minecraft:black_terracotta"), (byte) 64);

  public static final Material BARRIER = new Material(NamespaceID.from("minecraft:barrier"), (byte) 64);

  public static final Material IRON_TRAPDOOR = new Material(NamespaceID.from("minecraft:iron_trapdoor"), (byte) 64);

  public static final Material HAY_BLOCK = new Material(NamespaceID.from("minecraft:hay_block"), (byte) 64);

  public static final Material WHITE_CARPET = new Material(NamespaceID.from("minecraft:white_carpet"), (byte) 64);

  public static final Material ORANGE_CARPET = new Material(NamespaceID.from("minecraft:orange_carpet"), (byte) 64);

  public static final Material MAGENTA_CARPET = new Material(NamespaceID.from("minecraft:magenta_carpet"), (byte) 64);

  public static final Material LIGHT_BLUE_CARPET = new Material(NamespaceID.from("minecraft:light_blue_carpet"), (byte) 64);

  public static final Material YELLOW_CARPET = new Material(NamespaceID.from("minecraft:yellow_carpet"), (byte) 64);

  public static final Material LIME_CARPET = new Material(NamespaceID.from("minecraft:lime_carpet"), (byte) 64);

  public static final Material PINK_CARPET = new Material(NamespaceID.from("minecraft:pink_carpet"), (byte) 64);

  public static final Material GRAY_CARPET = new Material(NamespaceID.from("minecraft:gray_carpet"), (byte) 64);

  public static final Material LIGHT_GRAY_CARPET = new Material(NamespaceID.from("minecraft:light_gray_carpet"), (byte) 64);

  public static final Material CYAN_CARPET = new Material(NamespaceID.from("minecraft:cyan_carpet"), (byte) 64);

  public static final Material PURPLE_CARPET = new Material(NamespaceID.from("minecraft:purple_carpet"), (byte) 64);

  public static final Material BLUE_CARPET = new Material(NamespaceID.from("minecraft:blue_carpet"), (byte) 64);

  public static final Material BROWN_CARPET = new Material(NamespaceID.from("minecraft:brown_carpet"), (byte) 64);

  public static final Material GREEN_CARPET = new Material(NamespaceID.from("minecraft:green_carpet"), (byte) 64);

  public static final Material RED_CARPET = new Material(NamespaceID.from("minecraft:red_carpet"), (byte) 64);

  public static final Material BLACK_CARPET = new Material(NamespaceID.from("minecraft:black_carpet"), (byte) 64);

  public static final Material TERRACOTTA = new Material(NamespaceID.from("minecraft:terracotta"), (byte) 64);

  public static final Material COAL_BLOCK = new Material(NamespaceID.from("minecraft:coal_block"), (byte) 64);

  public static final Material PACKED_ICE = new Material(NamespaceID.from("minecraft:packed_ice"), (byte) 64);

  public static final Material ACACIA_STAIRS = new Material(NamespaceID.from("minecraft:acacia_stairs"), (byte) 64);

  public static final Material DARK_OAK_STAIRS = new Material(NamespaceID.from("minecraft:dark_oak_stairs"), (byte) 64);

  public static final Material SLIME_BLOCK = new Material(NamespaceID.from("minecraft:slime_block"), (byte) 64);

  public static final Material GRASS_PATH = new Material(NamespaceID.from("minecraft:grass_path"), (byte) 64);

  public static final Material SUNFLOWER = new Material(NamespaceID.from("minecraft:sunflower"), (byte) 64);

  public static final Material LILAC = new Material(NamespaceID.from("minecraft:lilac"), (byte) 64);

  public static final Material ROSE_BUSH = new Material(NamespaceID.from("minecraft:rose_bush"), (byte) 64);

  public static final Material PEONY = new Material(NamespaceID.from("minecraft:peony"), (byte) 64);

  public static final Material TALL_GRASS = new Material(NamespaceID.from("minecraft:tall_grass"), (byte) 64);

  public static final Material LARGE_FERN = new Material(NamespaceID.from("minecraft:large_fern"), (byte) 64);

  public static final Material WHITE_STAINED_GLASS = new Material(NamespaceID.from("minecraft:white_stained_glass"), (byte) 64);

  public static final Material ORANGE_STAINED_GLASS = new Material(NamespaceID.from("minecraft:orange_stained_glass"), (byte) 64);

  public static final Material MAGENTA_STAINED_GLASS = new Material(NamespaceID.from("minecraft:magenta_stained_glass"), (byte) 64);

  public static final Material LIGHT_BLUE_STAINED_GLASS = new Material(NamespaceID.from("minecraft:light_blue_stained_glass"), (byte) 64);

  public static final Material YELLOW_STAINED_GLASS = new Material(NamespaceID.from("minecraft:yellow_stained_glass"), (byte) 64);

  public static final Material LIME_STAINED_GLASS = new Material(NamespaceID.from("minecraft:lime_stained_glass"), (byte) 64);

  public static final Material PINK_STAINED_GLASS = new Material(NamespaceID.from("minecraft:pink_stained_glass"), (byte) 64);

  public static final Material GRAY_STAINED_GLASS = new Material(NamespaceID.from("minecraft:gray_stained_glass"), (byte) 64);

  public static final Material LIGHT_GRAY_STAINED_GLASS = new Material(NamespaceID.from("minecraft:light_gray_stained_glass"), (byte) 64);

  public static final Material CYAN_STAINED_GLASS = new Material(NamespaceID.from("minecraft:cyan_stained_glass"), (byte) 64);

  public static final Material PURPLE_STAINED_GLASS = new Material(NamespaceID.from("minecraft:purple_stained_glass"), (byte) 64);

  public static final Material BLUE_STAINED_GLASS = new Material(NamespaceID.from("minecraft:blue_stained_glass"), (byte) 64);

  public static final Material BROWN_STAINED_GLASS = new Material(NamespaceID.from("minecraft:brown_stained_glass"), (byte) 64);

  public static final Material GREEN_STAINED_GLASS = new Material(NamespaceID.from("minecraft:green_stained_glass"), (byte) 64);

  public static final Material RED_STAINED_GLASS = new Material(NamespaceID.from("minecraft:red_stained_glass"), (byte) 64);

  public static final Material BLACK_STAINED_GLASS = new Material(NamespaceID.from("minecraft:black_stained_glass"), (byte) 64);

  public static final Material WHITE_STAINED_GLASS_PANE = new Material(NamespaceID.from("minecraft:white_stained_glass_pane"), (byte) 64);

  public static final Material ORANGE_STAINED_GLASS_PANE = new Material(NamespaceID.from("minecraft:orange_stained_glass_pane"), (byte) 64);

  public static final Material MAGENTA_STAINED_GLASS_PANE = new Material(NamespaceID.from("minecraft:magenta_stained_glass_pane"), (byte) 64);

  public static final Material LIGHT_BLUE_STAINED_GLASS_PANE = new Material(NamespaceID.from("minecraft:light_blue_stained_glass_pane"), (byte) 64);

  public static final Material YELLOW_STAINED_GLASS_PANE = new Material(NamespaceID.from("minecraft:yellow_stained_glass_pane"), (byte) 64);

  public static final Material LIME_STAINED_GLASS_PANE = new Material(NamespaceID.from("minecraft:lime_stained_glass_pane"), (byte) 64);

  public static final Material PINK_STAINED_GLASS_PANE = new Material(NamespaceID.from("minecraft:pink_stained_glass_pane"), (byte) 64);

  public static final Material GRAY_STAINED_GLASS_PANE = new Material(NamespaceID.from("minecraft:gray_stained_glass_pane"), (byte) 64);

  public static final Material LIGHT_GRAY_STAINED_GLASS_PANE = new Material(NamespaceID.from("minecraft:light_gray_stained_glass_pane"), (byte) 64);

  public static final Material CYAN_STAINED_GLASS_PANE = new Material(NamespaceID.from("minecraft:cyan_stained_glass_pane"), (byte) 64);

  public static final Material PURPLE_STAINED_GLASS_PANE = new Material(NamespaceID.from("minecraft:purple_stained_glass_pane"), (byte) 64);

  public static final Material BLUE_STAINED_GLASS_PANE = new Material(NamespaceID.from("minecraft:blue_stained_glass_pane"), (byte) 64);

  public static final Material BROWN_STAINED_GLASS_PANE = new Material(NamespaceID.from("minecraft:brown_stained_glass_pane"), (byte) 64);

  public static final Material GREEN_STAINED_GLASS_PANE = new Material(NamespaceID.from("minecraft:green_stained_glass_pane"), (byte) 64);

  public static final Material RED_STAINED_GLASS_PANE = new Material(NamespaceID.from("minecraft:red_stained_glass_pane"), (byte) 64);

  public static final Material BLACK_STAINED_GLASS_PANE = new Material(NamespaceID.from("minecraft:black_stained_glass_pane"), (byte) 64);

  public static final Material PRISMARINE = new Material(NamespaceID.from("minecraft:prismarine"), (byte) 64);

  public static final Material PRISMARINE_BRICKS = new Material(NamespaceID.from("minecraft:prismarine_bricks"), (byte) 64);

  public static final Material DARK_PRISMARINE = new Material(NamespaceID.from("minecraft:dark_prismarine"), (byte) 64);

  public static final Material PRISMARINE_STAIRS = new Material(NamespaceID.from("minecraft:prismarine_stairs"), (byte) 64);

  public static final Material PRISMARINE_BRICK_STAIRS = new Material(NamespaceID.from("minecraft:prismarine_brick_stairs"), (byte) 64);

  public static final Material DARK_PRISMARINE_STAIRS = new Material(NamespaceID.from("minecraft:dark_prismarine_stairs"), (byte) 64);

  public static final Material SEA_LANTERN = new Material(NamespaceID.from("minecraft:sea_lantern"), (byte) 64);

  public static final Material RED_SANDSTONE = new Material(NamespaceID.from("minecraft:red_sandstone"), (byte) 64);

  public static final Material CHISELED_RED_SANDSTONE = new Material(NamespaceID.from("minecraft:chiseled_red_sandstone"), (byte) 64);

  public static final Material CUT_RED_SANDSTONE = new Material(NamespaceID.from("minecraft:cut_red_sandstone"), (byte) 64);

  public static final Material RED_SANDSTONE_STAIRS = new Material(NamespaceID.from("minecraft:red_sandstone_stairs"), (byte) 64);

  public static final Material REPEATING_COMMAND_BLOCK = new Material(NamespaceID.from("minecraft:repeating_command_block"), (byte) 64);

  public static final Material CHAIN_COMMAND_BLOCK = new Material(NamespaceID.from("minecraft:chain_command_block"), (byte) 64);

  public static final Material MAGMA_BLOCK = new Material(NamespaceID.from("minecraft:magma_block"), (byte) 64);

  public static final Material NETHER_WART_BLOCK = new Material(NamespaceID.from("minecraft:nether_wart_block"), (byte) 64);

  public static final Material WARPED_WART_BLOCK = new Material(NamespaceID.from("minecraft:warped_wart_block"), (byte) 64);

  public static final Material RED_NETHER_BRICKS = new Material(NamespaceID.from("minecraft:red_nether_bricks"), (byte) 64);

  public static final Material BONE_BLOCK = new Material(NamespaceID.from("minecraft:bone_block"), (byte) 64);

  public static final Material STRUCTURE_VOID = new Material(NamespaceID.from("minecraft:structure_void"), (byte) 64);

  public static final Material OBSERVER = new Material(NamespaceID.from("minecraft:observer"), (byte) 64);

  public static final Material SHULKER_BOX = new Material(NamespaceID.from("minecraft:shulker_box"), (byte) 1);

  public static final Material WHITE_SHULKER_BOX = new Material(NamespaceID.from("minecraft:white_shulker_box"), (byte) 1);

  public static final Material ORANGE_SHULKER_BOX = new Material(NamespaceID.from("minecraft:orange_shulker_box"), (byte) 1);

  public static final Material MAGENTA_SHULKER_BOX = new Material(NamespaceID.from("minecraft:magenta_shulker_box"), (byte) 1);

  public static final Material LIGHT_BLUE_SHULKER_BOX = new Material(NamespaceID.from("minecraft:light_blue_shulker_box"), (byte) 1);

  public static final Material YELLOW_SHULKER_BOX = new Material(NamespaceID.from("minecraft:yellow_shulker_box"), (byte) 1);

  public static final Material LIME_SHULKER_BOX = new Material(NamespaceID.from("minecraft:lime_shulker_box"), (byte) 1);

  public static final Material PINK_SHULKER_BOX = new Material(NamespaceID.from("minecraft:pink_shulker_box"), (byte) 1);

  public static final Material GRAY_SHULKER_BOX = new Material(NamespaceID.from("minecraft:gray_shulker_box"), (byte) 1);

  public static final Material LIGHT_GRAY_SHULKER_BOX = new Material(NamespaceID.from("minecraft:light_gray_shulker_box"), (byte) 1);

  public static final Material CYAN_SHULKER_BOX = new Material(NamespaceID.from("minecraft:cyan_shulker_box"), (byte) 1);

  public static final Material PURPLE_SHULKER_BOX = new Material(NamespaceID.from("minecraft:purple_shulker_box"), (byte) 1);

  public static final Material BLUE_SHULKER_BOX = new Material(NamespaceID.from("minecraft:blue_shulker_box"), (byte) 1);

  public static final Material BROWN_SHULKER_BOX = new Material(NamespaceID.from("minecraft:brown_shulker_box"), (byte) 1);

  public static final Material GREEN_SHULKER_BOX = new Material(NamespaceID.from("minecraft:green_shulker_box"), (byte) 1);

  public static final Material RED_SHULKER_BOX = new Material(NamespaceID.from("minecraft:red_shulker_box"), (byte) 1);

  public static final Material BLACK_SHULKER_BOX = new Material(NamespaceID.from("minecraft:black_shulker_box"), (byte) 1);

  public static final Material WHITE_GLAZED_TERRACOTTA = new Material(NamespaceID.from("minecraft:white_glazed_terracotta"), (byte) 64);

  public static final Material ORANGE_GLAZED_TERRACOTTA = new Material(NamespaceID.from("minecraft:orange_glazed_terracotta"), (byte) 64);

  public static final Material MAGENTA_GLAZED_TERRACOTTA = new Material(NamespaceID.from("minecraft:magenta_glazed_terracotta"), (byte) 64);

  public static final Material LIGHT_BLUE_GLAZED_TERRACOTTA = new Material(NamespaceID.from("minecraft:light_blue_glazed_terracotta"), (byte) 64);

  public static final Material YELLOW_GLAZED_TERRACOTTA = new Material(NamespaceID.from("minecraft:yellow_glazed_terracotta"), (byte) 64);

  public static final Material LIME_GLAZED_TERRACOTTA = new Material(NamespaceID.from("minecraft:lime_glazed_terracotta"), (byte) 64);

  public static final Material PINK_GLAZED_TERRACOTTA = new Material(NamespaceID.from("minecraft:pink_glazed_terracotta"), (byte) 64);

  public static final Material GRAY_GLAZED_TERRACOTTA = new Material(NamespaceID.from("minecraft:gray_glazed_terracotta"), (byte) 64);

  public static final Material LIGHT_GRAY_GLAZED_TERRACOTTA = new Material(NamespaceID.from("minecraft:light_gray_glazed_terracotta"), (byte) 64);

  public static final Material CYAN_GLAZED_TERRACOTTA = new Material(NamespaceID.from("minecraft:cyan_glazed_terracotta"), (byte) 64);

  public static final Material PURPLE_GLAZED_TERRACOTTA = new Material(NamespaceID.from("minecraft:purple_glazed_terracotta"), (byte) 64);

  public static final Material BLUE_GLAZED_TERRACOTTA = new Material(NamespaceID.from("minecraft:blue_glazed_terracotta"), (byte) 64);

  public static final Material BROWN_GLAZED_TERRACOTTA = new Material(NamespaceID.from("minecraft:brown_glazed_terracotta"), (byte) 64);

  public static final Material GREEN_GLAZED_TERRACOTTA = new Material(NamespaceID.from("minecraft:green_glazed_terracotta"), (byte) 64);

  public static final Material RED_GLAZED_TERRACOTTA = new Material(NamespaceID.from("minecraft:red_glazed_terracotta"), (byte) 64);

  public static final Material BLACK_GLAZED_TERRACOTTA = new Material(NamespaceID.from("minecraft:black_glazed_terracotta"), (byte) 64);

  public static final Material WHITE_CONCRETE = new Material(NamespaceID.from("minecraft:white_concrete"), (byte) 64);

  public static final Material ORANGE_CONCRETE = new Material(NamespaceID.from("minecraft:orange_concrete"), (byte) 64);

  public static final Material MAGENTA_CONCRETE = new Material(NamespaceID.from("minecraft:magenta_concrete"), (byte) 64);

  public static final Material LIGHT_BLUE_CONCRETE = new Material(NamespaceID.from("minecraft:light_blue_concrete"), (byte) 64);

  public static final Material YELLOW_CONCRETE = new Material(NamespaceID.from("minecraft:yellow_concrete"), (byte) 64);

  public static final Material LIME_CONCRETE = new Material(NamespaceID.from("minecraft:lime_concrete"), (byte) 64);

  public static final Material PINK_CONCRETE = new Material(NamespaceID.from("minecraft:pink_concrete"), (byte) 64);

  public static final Material GRAY_CONCRETE = new Material(NamespaceID.from("minecraft:gray_concrete"), (byte) 64);

  public static final Material LIGHT_GRAY_CONCRETE = new Material(NamespaceID.from("minecraft:light_gray_concrete"), (byte) 64);

  public static final Material CYAN_CONCRETE = new Material(NamespaceID.from("minecraft:cyan_concrete"), (byte) 64);

  public static final Material PURPLE_CONCRETE = new Material(NamespaceID.from("minecraft:purple_concrete"), (byte) 64);

  public static final Material BLUE_CONCRETE = new Material(NamespaceID.from("minecraft:blue_concrete"), (byte) 64);

  public static final Material BROWN_CONCRETE = new Material(NamespaceID.from("minecraft:brown_concrete"), (byte) 64);

  public static final Material GREEN_CONCRETE = new Material(NamespaceID.from("minecraft:green_concrete"), (byte) 64);

  public static final Material RED_CONCRETE = new Material(NamespaceID.from("minecraft:red_concrete"), (byte) 64);

  public static final Material BLACK_CONCRETE = new Material(NamespaceID.from("minecraft:black_concrete"), (byte) 64);

  public static final Material WHITE_CONCRETE_POWDER = new Material(NamespaceID.from("minecraft:white_concrete_powder"), (byte) 64);

  public static final Material ORANGE_CONCRETE_POWDER = new Material(NamespaceID.from("minecraft:orange_concrete_powder"), (byte) 64);

  public static final Material MAGENTA_CONCRETE_POWDER = new Material(NamespaceID.from("minecraft:magenta_concrete_powder"), (byte) 64);

  public static final Material LIGHT_BLUE_CONCRETE_POWDER = new Material(NamespaceID.from("minecraft:light_blue_concrete_powder"), (byte) 64);

  public static final Material YELLOW_CONCRETE_POWDER = new Material(NamespaceID.from("minecraft:yellow_concrete_powder"), (byte) 64);

  public static final Material LIME_CONCRETE_POWDER = new Material(NamespaceID.from("minecraft:lime_concrete_powder"), (byte) 64);

  public static final Material PINK_CONCRETE_POWDER = new Material(NamespaceID.from("minecraft:pink_concrete_powder"), (byte) 64);

  public static final Material GRAY_CONCRETE_POWDER = new Material(NamespaceID.from("minecraft:gray_concrete_powder"), (byte) 64);

  public static final Material LIGHT_GRAY_CONCRETE_POWDER = new Material(NamespaceID.from("minecraft:light_gray_concrete_powder"), (byte) 64);

  public static final Material CYAN_CONCRETE_POWDER = new Material(NamespaceID.from("minecraft:cyan_concrete_powder"), (byte) 64);

  public static final Material PURPLE_CONCRETE_POWDER = new Material(NamespaceID.from("minecraft:purple_concrete_powder"), (byte) 64);

  public static final Material BLUE_CONCRETE_POWDER = new Material(NamespaceID.from("minecraft:blue_concrete_powder"), (byte) 64);

  public static final Material BROWN_CONCRETE_POWDER = new Material(NamespaceID.from("minecraft:brown_concrete_powder"), (byte) 64);

  public static final Material GREEN_CONCRETE_POWDER = new Material(NamespaceID.from("minecraft:green_concrete_powder"), (byte) 64);

  public static final Material RED_CONCRETE_POWDER = new Material(NamespaceID.from("minecraft:red_concrete_powder"), (byte) 64);

  public static final Material BLACK_CONCRETE_POWDER = new Material(NamespaceID.from("minecraft:black_concrete_powder"), (byte) 64);

  public static final Material TURTLE_EGG = new Material(NamespaceID.from("minecraft:turtle_egg"), (byte) 64);

  public static final Material DEAD_TUBE_CORAL_BLOCK = new Material(NamespaceID.from("minecraft:dead_tube_coral_block"), (byte) 64);

  public static final Material DEAD_BRAIN_CORAL_BLOCK = new Material(NamespaceID.from("minecraft:dead_brain_coral_block"), (byte) 64);

  public static final Material DEAD_BUBBLE_CORAL_BLOCK = new Material(NamespaceID.from("minecraft:dead_bubble_coral_block"), (byte) 64);

  public static final Material DEAD_FIRE_CORAL_BLOCK = new Material(NamespaceID.from("minecraft:dead_fire_coral_block"), (byte) 64);

  public static final Material DEAD_HORN_CORAL_BLOCK = new Material(NamespaceID.from("minecraft:dead_horn_coral_block"), (byte) 64);

  public static final Material TUBE_CORAL_BLOCK = new Material(NamespaceID.from("minecraft:tube_coral_block"), (byte) 64);

  public static final Material BRAIN_CORAL_BLOCK = new Material(NamespaceID.from("minecraft:brain_coral_block"), (byte) 64);

  public static final Material BUBBLE_CORAL_BLOCK = new Material(NamespaceID.from("minecraft:bubble_coral_block"), (byte) 64);

  public static final Material FIRE_CORAL_BLOCK = new Material(NamespaceID.from("minecraft:fire_coral_block"), (byte) 64);

  public static final Material HORN_CORAL_BLOCK = new Material(NamespaceID.from("minecraft:horn_coral_block"), (byte) 64);

  public static final Material TUBE_CORAL = new Material(NamespaceID.from("minecraft:tube_coral"), (byte) 64);

  public static final Material BRAIN_CORAL = new Material(NamespaceID.from("minecraft:brain_coral"), (byte) 64);

  public static final Material BUBBLE_CORAL = new Material(NamespaceID.from("minecraft:bubble_coral"), (byte) 64);

  public static final Material FIRE_CORAL = new Material(NamespaceID.from("minecraft:fire_coral"), (byte) 64);

  public static final Material HORN_CORAL = new Material(NamespaceID.from("minecraft:horn_coral"), (byte) 64);

  public static final Material DEAD_BRAIN_CORAL = new Material(NamespaceID.from("minecraft:dead_brain_coral"), (byte) 64);

  public static final Material DEAD_BUBBLE_CORAL = new Material(NamespaceID.from("minecraft:dead_bubble_coral"), (byte) 64);

  public static final Material DEAD_FIRE_CORAL = new Material(NamespaceID.from("minecraft:dead_fire_coral"), (byte) 64);

  public static final Material DEAD_HORN_CORAL = new Material(NamespaceID.from("minecraft:dead_horn_coral"), (byte) 64);

  public static final Material DEAD_TUBE_CORAL = new Material(NamespaceID.from("minecraft:dead_tube_coral"), (byte) 64);

  public static final Material TUBE_CORAL_FAN = new Material(NamespaceID.from("minecraft:tube_coral_fan"), (byte) 64);

  public static final Material BRAIN_CORAL_FAN = new Material(NamespaceID.from("minecraft:brain_coral_fan"), (byte) 64);

  public static final Material BUBBLE_CORAL_FAN = new Material(NamespaceID.from("minecraft:bubble_coral_fan"), (byte) 64);

  public static final Material FIRE_CORAL_FAN = new Material(NamespaceID.from("minecraft:fire_coral_fan"), (byte) 64);

  public static final Material HORN_CORAL_FAN = new Material(NamespaceID.from("minecraft:horn_coral_fan"), (byte) 64);

  public static final Material DEAD_TUBE_CORAL_FAN = new Material(NamespaceID.from("minecraft:dead_tube_coral_fan"), (byte) 64);

  public static final Material DEAD_BRAIN_CORAL_FAN = new Material(NamespaceID.from("minecraft:dead_brain_coral_fan"), (byte) 64);

  public static final Material DEAD_BUBBLE_CORAL_FAN = new Material(NamespaceID.from("minecraft:dead_bubble_coral_fan"), (byte) 64);

  public static final Material DEAD_FIRE_CORAL_FAN = new Material(NamespaceID.from("minecraft:dead_fire_coral_fan"), (byte) 64);

  public static final Material DEAD_HORN_CORAL_FAN = new Material(NamespaceID.from("minecraft:dead_horn_coral_fan"), (byte) 64);

  public static final Material BLUE_ICE = new Material(NamespaceID.from("minecraft:blue_ice"), (byte) 64);

  public static final Material CONDUIT = new Material(NamespaceID.from("minecraft:conduit"), (byte) 64);

  public static final Material POLISHED_GRANITE_STAIRS = new Material(NamespaceID.from("minecraft:polished_granite_stairs"), (byte) 64);

  public static final Material SMOOTH_RED_SANDSTONE_STAIRS = new Material(NamespaceID.from("minecraft:smooth_red_sandstone_stairs"), (byte) 64);

  public static final Material MOSSY_STONE_BRICK_STAIRS = new Material(NamespaceID.from("minecraft:mossy_stone_brick_stairs"), (byte) 64);

  public static final Material POLISHED_DIORITE_STAIRS = new Material(NamespaceID.from("minecraft:polished_diorite_stairs"), (byte) 64);

  public static final Material MOSSY_COBBLESTONE_STAIRS = new Material(NamespaceID.from("minecraft:mossy_cobblestone_stairs"), (byte) 64);

  public static final Material END_STONE_BRICK_STAIRS = new Material(NamespaceID.from("minecraft:end_stone_brick_stairs"), (byte) 64);

  public static final Material STONE_STAIRS = new Material(NamespaceID.from("minecraft:stone_stairs"), (byte) 64);

  public static final Material SMOOTH_SANDSTONE_STAIRS = new Material(NamespaceID.from("minecraft:smooth_sandstone_stairs"), (byte) 64);

  public static final Material SMOOTH_QUARTZ_STAIRS = new Material(NamespaceID.from("minecraft:smooth_quartz_stairs"), (byte) 64);

  public static final Material GRANITE_STAIRS = new Material(NamespaceID.from("minecraft:granite_stairs"), (byte) 64);

  public static final Material ANDESITE_STAIRS = new Material(NamespaceID.from("minecraft:andesite_stairs"), (byte) 64);

  public static final Material RED_NETHER_BRICK_STAIRS = new Material(NamespaceID.from("minecraft:red_nether_brick_stairs"), (byte) 64);

  public static final Material POLISHED_ANDESITE_STAIRS = new Material(NamespaceID.from("minecraft:polished_andesite_stairs"), (byte) 64);

  public static final Material DIORITE_STAIRS = new Material(NamespaceID.from("minecraft:diorite_stairs"), (byte) 64);

  public static final Material POLISHED_GRANITE_SLAB = new Material(NamespaceID.from("minecraft:polished_granite_slab"), (byte) 64);

  public static final Material SMOOTH_RED_SANDSTONE_SLAB = new Material(NamespaceID.from("minecraft:smooth_red_sandstone_slab"), (byte) 64);

  public static final Material MOSSY_STONE_BRICK_SLAB = new Material(NamespaceID.from("minecraft:mossy_stone_brick_slab"), (byte) 64);

  public static final Material POLISHED_DIORITE_SLAB = new Material(NamespaceID.from("minecraft:polished_diorite_slab"), (byte) 64);

  public static final Material MOSSY_COBBLESTONE_SLAB = new Material(NamespaceID.from("minecraft:mossy_cobblestone_slab"), (byte) 64);

  public static final Material END_STONE_BRICK_SLAB = new Material(NamespaceID.from("minecraft:end_stone_brick_slab"), (byte) 64);

  public static final Material SMOOTH_SANDSTONE_SLAB = new Material(NamespaceID.from("minecraft:smooth_sandstone_slab"), (byte) 64);

  public static final Material SMOOTH_QUARTZ_SLAB = new Material(NamespaceID.from("minecraft:smooth_quartz_slab"), (byte) 64);

  public static final Material GRANITE_SLAB = new Material(NamespaceID.from("minecraft:granite_slab"), (byte) 64);

  public static final Material ANDESITE_SLAB = new Material(NamespaceID.from("minecraft:andesite_slab"), (byte) 64);

  public static final Material RED_NETHER_BRICK_SLAB = new Material(NamespaceID.from("minecraft:red_nether_brick_slab"), (byte) 64);

  public static final Material POLISHED_ANDESITE_SLAB = new Material(NamespaceID.from("minecraft:polished_andesite_slab"), (byte) 64);

  public static final Material DIORITE_SLAB = new Material(NamespaceID.from("minecraft:diorite_slab"), (byte) 64);

  public static final Material SCAFFOLDING = new Material(NamespaceID.from("minecraft:scaffolding"), (byte) 64);

  public static final Material IRON_DOOR = new Material(NamespaceID.from("minecraft:iron_door"), (byte) 64);

  public static final Material OAK_DOOR = new Material(NamespaceID.from("minecraft:oak_door"), (byte) 64);

  public static final Material SPRUCE_DOOR = new Material(NamespaceID.from("minecraft:spruce_door"), (byte) 64);

  public static final Material BIRCH_DOOR = new Material(NamespaceID.from("minecraft:birch_door"), (byte) 64);

  public static final Material JUNGLE_DOOR = new Material(NamespaceID.from("minecraft:jungle_door"), (byte) 64);

  public static final Material ACACIA_DOOR = new Material(NamespaceID.from("minecraft:acacia_door"), (byte) 64);

  public static final Material DARK_OAK_DOOR = new Material(NamespaceID.from("minecraft:dark_oak_door"), (byte) 64);

  public static final Material CRIMSON_DOOR = new Material(NamespaceID.from("minecraft:crimson_door"), (byte) 64);

  public static final Material WARPED_DOOR = new Material(NamespaceID.from("minecraft:warped_door"), (byte) 64);

  public static final Material REPEATER = new Material(NamespaceID.from("minecraft:repeater"), (byte) 64);

  public static final Material COMPARATOR = new Material(NamespaceID.from("minecraft:comparator"), (byte) 64);

  public static final Material STRUCTURE_BLOCK = new Material(NamespaceID.from("minecraft:structure_block"), (byte) 64);

  public static final Material JIGSAW = new Material(NamespaceID.from("minecraft:jigsaw"), (byte) 64);

  public static final Material TURTLE_HELMET = new Material(NamespaceID.from("minecraft:turtle_helmet"), (byte) 1);

  public static final Material SCUTE = new Material(NamespaceID.from("minecraft:scute"), (byte) 64);

  public static final Material FLINT_AND_STEEL = new Material(NamespaceID.from("minecraft:flint_and_steel"), (byte) 1);

  public static final Material APPLE = new Material(NamespaceID.from("minecraft:apple"), (byte) 64);

  public static final Material BOW = new Material(NamespaceID.from("minecraft:bow"), (byte) 1);

  public static final Material ARROW = new Material(NamespaceID.from("minecraft:arrow"), (byte) 64);

  public static final Material COAL = new Material(NamespaceID.from("minecraft:coal"), (byte) 64);

  public static final Material CHARCOAL = new Material(NamespaceID.from("minecraft:charcoal"), (byte) 64);

  public static final Material DIAMOND = new Material(NamespaceID.from("minecraft:diamond"), (byte) 64);

  public static final Material IRON_INGOT = new Material(NamespaceID.from("minecraft:iron_ingot"), (byte) 64);

  public static final Material GOLD_INGOT = new Material(NamespaceID.from("minecraft:gold_ingot"), (byte) 64);

  public static final Material NETHERITE_INGOT = new Material(NamespaceID.from("minecraft:netherite_ingot"), (byte) 64);

  public static final Material NETHERITE_SCRAP = new Material(NamespaceID.from("minecraft:netherite_scrap"), (byte) 64);

  public static final Material WOODEN_SWORD = new Material(NamespaceID.from("minecraft:wooden_sword"), (byte) 1);

  public static final Material WOODEN_SHOVEL = new Material(NamespaceID.from("minecraft:wooden_shovel"), (byte) 1);

  public static final Material WOODEN_PICKAXE = new Material(NamespaceID.from("minecraft:wooden_pickaxe"), (byte) 1);

  public static final Material WOODEN_AXE = new Material(NamespaceID.from("minecraft:wooden_axe"), (byte) 1);

  public static final Material WOODEN_HOE = new Material(NamespaceID.from("minecraft:wooden_hoe"), (byte) 1);

  public static final Material STONE_SWORD = new Material(NamespaceID.from("minecraft:stone_sword"), (byte) 1);

  public static final Material STONE_SHOVEL = new Material(NamespaceID.from("minecraft:stone_shovel"), (byte) 1);

  public static final Material STONE_PICKAXE = new Material(NamespaceID.from("minecraft:stone_pickaxe"), (byte) 1);

  public static final Material STONE_AXE = new Material(NamespaceID.from("minecraft:stone_axe"), (byte) 1);

  public static final Material STONE_HOE = new Material(NamespaceID.from("minecraft:stone_hoe"), (byte) 1);

  public static final Material GOLDEN_SWORD = new Material(NamespaceID.from("minecraft:golden_sword"), (byte) 1);

  public static final Material GOLDEN_SHOVEL = new Material(NamespaceID.from("minecraft:golden_shovel"), (byte) 1);

  public static final Material GOLDEN_PICKAXE = new Material(NamespaceID.from("minecraft:golden_pickaxe"), (byte) 1);

  public static final Material GOLDEN_AXE = new Material(NamespaceID.from("minecraft:golden_axe"), (byte) 1);

  public static final Material GOLDEN_HOE = new Material(NamespaceID.from("minecraft:golden_hoe"), (byte) 1);

  public static final Material IRON_SWORD = new Material(NamespaceID.from("minecraft:iron_sword"), (byte) 1);

  public static final Material IRON_SHOVEL = new Material(NamespaceID.from("minecraft:iron_shovel"), (byte) 1);

  public static final Material IRON_PICKAXE = new Material(NamespaceID.from("minecraft:iron_pickaxe"), (byte) 1);

  public static final Material IRON_AXE = new Material(NamespaceID.from("minecraft:iron_axe"), (byte) 1);

  public static final Material IRON_HOE = new Material(NamespaceID.from("minecraft:iron_hoe"), (byte) 1);

  public static final Material DIAMOND_SWORD = new Material(NamespaceID.from("minecraft:diamond_sword"), (byte) 1);

  public static final Material DIAMOND_SHOVEL = new Material(NamespaceID.from("minecraft:diamond_shovel"), (byte) 1);

  public static final Material DIAMOND_PICKAXE = new Material(NamespaceID.from("minecraft:diamond_pickaxe"), (byte) 1);

  public static final Material DIAMOND_AXE = new Material(NamespaceID.from("minecraft:diamond_axe"), (byte) 1);

  public static final Material DIAMOND_HOE = new Material(NamespaceID.from("minecraft:diamond_hoe"), (byte) 1);

  public static final Material NETHERITE_SWORD = new Material(NamespaceID.from("minecraft:netherite_sword"), (byte) 1);

  public static final Material NETHERITE_SHOVEL = new Material(NamespaceID.from("minecraft:netherite_shovel"), (byte) 1);

  public static final Material NETHERITE_PICKAXE = new Material(NamespaceID.from("minecraft:netherite_pickaxe"), (byte) 1);

  public static final Material NETHERITE_AXE = new Material(NamespaceID.from("minecraft:netherite_axe"), (byte) 1);

  public static final Material NETHERITE_HOE = new Material(NamespaceID.from("minecraft:netherite_hoe"), (byte) 1);

  public static final Material STICK = new Material(NamespaceID.from("minecraft:stick"), (byte) 64);

  public static final Material BOWL = new Material(NamespaceID.from("minecraft:bowl"), (byte) 64);

  public static final Material MUSHROOM_STEW = new Material(NamespaceID.from("minecraft:mushroom_stew"), (byte) 1);

  public static final Material STRING = new Material(NamespaceID.from("minecraft:string"), (byte) 64);

  public static final Material FEATHER = new Material(NamespaceID.from("minecraft:feather"), (byte) 64);

  public static final Material GUNPOWDER = new Material(NamespaceID.from("minecraft:gunpowder"), (byte) 64);

  public static final Material WHEAT_SEEDS = new Material(NamespaceID.from("minecraft:wheat_seeds"), (byte) 64);

  public static final Material WHEAT = new Material(NamespaceID.from("minecraft:wheat"), (byte) 64);

  public static final Material BREAD = new Material(NamespaceID.from("minecraft:bread"), (byte) 64);

  public static final Material LEATHER_HELMET = new Material(NamespaceID.from("minecraft:leather_helmet"), (byte) 1);

  public static final Material LEATHER_CHESTPLATE = new Material(NamespaceID.from("minecraft:leather_chestplate"), (byte) 1);

  public static final Material LEATHER_LEGGINGS = new Material(NamespaceID.from("minecraft:leather_leggings"), (byte) 1);

  public static final Material LEATHER_BOOTS = new Material(NamespaceID.from("minecraft:leather_boots"), (byte) 1);

  public static final Material CHAINMAIL_HELMET = new Material(NamespaceID.from("minecraft:chainmail_helmet"), (byte) 1);

  public static final Material CHAINMAIL_CHESTPLATE = new Material(NamespaceID.from("minecraft:chainmail_chestplate"), (byte) 1);

  public static final Material CHAINMAIL_LEGGINGS = new Material(NamespaceID.from("minecraft:chainmail_leggings"), (byte) 1);

  public static final Material CHAINMAIL_BOOTS = new Material(NamespaceID.from("minecraft:chainmail_boots"), (byte) 1);

  public static final Material IRON_HELMET = new Material(NamespaceID.from("minecraft:iron_helmet"), (byte) 1);

  public static final Material IRON_CHESTPLATE = new Material(NamespaceID.from("minecraft:iron_chestplate"), (byte) 1);

  public static final Material IRON_LEGGINGS = new Material(NamespaceID.from("minecraft:iron_leggings"), (byte) 1);

  public static final Material IRON_BOOTS = new Material(NamespaceID.from("minecraft:iron_boots"), (byte) 1);

  public static final Material DIAMOND_HELMET = new Material(NamespaceID.from("minecraft:diamond_helmet"), (byte) 1);

  public static final Material DIAMOND_CHESTPLATE = new Material(NamespaceID.from("minecraft:diamond_chestplate"), (byte) 1);

  public static final Material DIAMOND_LEGGINGS = new Material(NamespaceID.from("minecraft:diamond_leggings"), (byte) 1);

  public static final Material DIAMOND_BOOTS = new Material(NamespaceID.from("minecraft:diamond_boots"), (byte) 1);

  public static final Material GOLDEN_HELMET = new Material(NamespaceID.from("minecraft:golden_helmet"), (byte) 1);

  public static final Material GOLDEN_CHESTPLATE = new Material(NamespaceID.from("minecraft:golden_chestplate"), (byte) 1);

  public static final Material GOLDEN_LEGGINGS = new Material(NamespaceID.from("minecraft:golden_leggings"), (byte) 1);

  public static final Material GOLDEN_BOOTS = new Material(NamespaceID.from("minecraft:golden_boots"), (byte) 1);

  public static final Material NETHERITE_HELMET = new Material(NamespaceID.from("minecraft:netherite_helmet"), (byte) 1);

  public static final Material NETHERITE_CHESTPLATE = new Material(NamespaceID.from("minecraft:netherite_chestplate"), (byte) 1);

  public static final Material NETHERITE_LEGGINGS = new Material(NamespaceID.from("minecraft:netherite_leggings"), (byte) 1);

  public static final Material NETHERITE_BOOTS = new Material(NamespaceID.from("minecraft:netherite_boots"), (byte) 1);

  public static final Material FLINT = new Material(NamespaceID.from("minecraft:flint"), (byte) 64);

  public static final Material PORKCHOP = new Material(NamespaceID.from("minecraft:porkchop"), (byte) 64);

  public static final Material COOKED_PORKCHOP = new Material(NamespaceID.from("minecraft:cooked_porkchop"), (byte) 64);

  public static final Material PAINTING = new Material(NamespaceID.from("minecraft:painting"), (byte) 64);

  public static final Material GOLDEN_APPLE = new Material(NamespaceID.from("minecraft:golden_apple"), (byte) 64);

  public static final Material ENCHANTED_GOLDEN_APPLE = new Material(NamespaceID.from("minecraft:enchanted_golden_apple"), (byte) 64);

  public static final Material OAK_SIGN = new Material(NamespaceID.from("minecraft:oak_sign"), (byte) 16);

  public static final Material SPRUCE_SIGN = new Material(NamespaceID.from("minecraft:spruce_sign"), (byte) 16);

  public static final Material BIRCH_SIGN = new Material(NamespaceID.from("minecraft:birch_sign"), (byte) 16);

  public static final Material JUNGLE_SIGN = new Material(NamespaceID.from("minecraft:jungle_sign"), (byte) 16);

  public static final Material ACACIA_SIGN = new Material(NamespaceID.from("minecraft:acacia_sign"), (byte) 16);

  public static final Material DARK_OAK_SIGN = new Material(NamespaceID.from("minecraft:dark_oak_sign"), (byte) 16);

  public static final Material CRIMSON_SIGN = new Material(NamespaceID.from("minecraft:crimson_sign"), (byte) 16);

  public static final Material WARPED_SIGN = new Material(NamespaceID.from("minecraft:warped_sign"), (byte) 16);

  public static final Material BUCKET = new Material(NamespaceID.from("minecraft:bucket"), (byte) 16);

  public static final Material WATER_BUCKET = new Material(NamespaceID.from("minecraft:water_bucket"), (byte) 1);

  public static final Material LAVA_BUCKET = new Material(NamespaceID.from("minecraft:lava_bucket"), (byte) 1);

  public static final Material MINECART = new Material(NamespaceID.from("minecraft:minecart"), (byte) 1);

  public static final Material SADDLE = new Material(NamespaceID.from("minecraft:saddle"), (byte) 1);

  public static final Material REDSTONE = new Material(NamespaceID.from("minecraft:redstone"), (byte) 64);

  public static final Material SNOWBALL = new Material(NamespaceID.from("minecraft:snowball"), (byte) 16);

  public static final Material OAK_BOAT = new Material(NamespaceID.from("minecraft:oak_boat"), (byte) 1);

  public static final Material LEATHER = new Material(NamespaceID.from("minecraft:leather"), (byte) 64);

  public static final Material MILK_BUCKET = new Material(NamespaceID.from("minecraft:milk_bucket"), (byte) 1);

  public static final Material PUFFERFISH_BUCKET = new Material(NamespaceID.from("minecraft:pufferfish_bucket"), (byte) 1);

  public static final Material SALMON_BUCKET = new Material(NamespaceID.from("minecraft:salmon_bucket"), (byte) 1);

  public static final Material COD_BUCKET = new Material(NamespaceID.from("minecraft:cod_bucket"), (byte) 1);

  public static final Material TROPICAL_FISH_BUCKET = new Material(NamespaceID.from("minecraft:tropical_fish_bucket"), (byte) 1);

  public static final Material BRICK = new Material(NamespaceID.from("minecraft:brick"), (byte) 64);

  public static final Material CLAY_BALL = new Material(NamespaceID.from("minecraft:clay_ball"), (byte) 64);

  public static final Material DRIED_KELP_BLOCK = new Material(NamespaceID.from("minecraft:dried_kelp_block"), (byte) 64);

  public static final Material PAPER = new Material(NamespaceID.from("minecraft:paper"), (byte) 64);

  public static final Material BOOK = new Material(NamespaceID.from("minecraft:book"), (byte) 64);

  public static final Material SLIME_BALL = new Material(NamespaceID.from("minecraft:slime_ball"), (byte) 64);

  public static final Material CHEST_MINECART = new Material(NamespaceID.from("minecraft:chest_minecart"), (byte) 1);

  public static final Material FURNACE_MINECART = new Material(NamespaceID.from("minecraft:furnace_minecart"), (byte) 1);

  public static final Material EGG = new Material(NamespaceID.from("minecraft:egg"), (byte) 16);

  public static final Material COMPASS = new Material(NamespaceID.from("minecraft:compass"), (byte) 64);

  public static final Material FISHING_ROD = new Material(NamespaceID.from("minecraft:fishing_rod"), (byte) 1);

  public static final Material CLOCK = new Material(NamespaceID.from("minecraft:clock"), (byte) 64);

  public static final Material GLOWSTONE_DUST = new Material(NamespaceID.from("minecraft:glowstone_dust"), (byte) 64);

  public static final Material COD = new Material(NamespaceID.from("minecraft:cod"), (byte) 64);

  public static final Material SALMON = new Material(NamespaceID.from("minecraft:salmon"), (byte) 64);

  public static final Material TROPICAL_FISH = new Material(NamespaceID.from("minecraft:tropical_fish"), (byte) 64);

  public static final Material PUFFERFISH = new Material(NamespaceID.from("minecraft:pufferfish"), (byte) 64);

  public static final Material COOKED_COD = new Material(NamespaceID.from("minecraft:cooked_cod"), (byte) 64);

  public static final Material COOKED_SALMON = new Material(NamespaceID.from("minecraft:cooked_salmon"), (byte) 64);

  public static final Material INK_SAC = new Material(NamespaceID.from("minecraft:ink_sac"), (byte) 64);

  public static final Material COCOA_BEANS = new Material(NamespaceID.from("minecraft:cocoa_beans"), (byte) 64);

  public static final Material LAPIS_LAZULI = new Material(NamespaceID.from("minecraft:lapis_lazuli"), (byte) 64);

  public static final Material WHITE_DYE = new Material(NamespaceID.from("minecraft:white_dye"), (byte) 64);

  public static final Material ORANGE_DYE = new Material(NamespaceID.from("minecraft:orange_dye"), (byte) 64);

  public static final Material MAGENTA_DYE = new Material(NamespaceID.from("minecraft:magenta_dye"), (byte) 64);

  public static final Material LIGHT_BLUE_DYE = new Material(NamespaceID.from("minecraft:light_blue_dye"), (byte) 64);

  public static final Material YELLOW_DYE = new Material(NamespaceID.from("minecraft:yellow_dye"), (byte) 64);

  public static final Material LIME_DYE = new Material(NamespaceID.from("minecraft:lime_dye"), (byte) 64);

  public static final Material PINK_DYE = new Material(NamespaceID.from("minecraft:pink_dye"), (byte) 64);

  public static final Material GRAY_DYE = new Material(NamespaceID.from("minecraft:gray_dye"), (byte) 64);

  public static final Material LIGHT_GRAY_DYE = new Material(NamespaceID.from("minecraft:light_gray_dye"), (byte) 64);

  public static final Material CYAN_DYE = new Material(NamespaceID.from("minecraft:cyan_dye"), (byte) 64);

  public static final Material PURPLE_DYE = new Material(NamespaceID.from("minecraft:purple_dye"), (byte) 64);

  public static final Material BLUE_DYE = new Material(NamespaceID.from("minecraft:blue_dye"), (byte) 64);

  public static final Material BROWN_DYE = new Material(NamespaceID.from("minecraft:brown_dye"), (byte) 64);

  public static final Material GREEN_DYE = new Material(NamespaceID.from("minecraft:green_dye"), (byte) 64);

  public static final Material RED_DYE = new Material(NamespaceID.from("minecraft:red_dye"), (byte) 64);

  public static final Material BLACK_DYE = new Material(NamespaceID.from("minecraft:black_dye"), (byte) 64);

  public static final Material BONE_MEAL = new Material(NamespaceID.from("minecraft:bone_meal"), (byte) 64);

  public static final Material BONE = new Material(NamespaceID.from("minecraft:bone"), (byte) 64);

  public static final Material SUGAR = new Material(NamespaceID.from("minecraft:sugar"), (byte) 64);

  public static final Material CAKE = new Material(NamespaceID.from("minecraft:cake"), (byte) 1);

  public static final Material WHITE_BED = new Material(NamespaceID.from("minecraft:white_bed"), (byte) 1);

  public static final Material ORANGE_BED = new Material(NamespaceID.from("minecraft:orange_bed"), (byte) 1);

  public static final Material MAGENTA_BED = new Material(NamespaceID.from("minecraft:magenta_bed"), (byte) 1);

  public static final Material LIGHT_BLUE_BED = new Material(NamespaceID.from("minecraft:light_blue_bed"), (byte) 1);

  public static final Material YELLOW_BED = new Material(NamespaceID.from("minecraft:yellow_bed"), (byte) 1);

  public static final Material LIME_BED = new Material(NamespaceID.from("minecraft:lime_bed"), (byte) 1);

  public static final Material PINK_BED = new Material(NamespaceID.from("minecraft:pink_bed"), (byte) 1);

  public static final Material GRAY_BED = new Material(NamespaceID.from("minecraft:gray_bed"), (byte) 1);

  public static final Material LIGHT_GRAY_BED = new Material(NamespaceID.from("minecraft:light_gray_bed"), (byte) 1);

  public static final Material CYAN_BED = new Material(NamespaceID.from("minecraft:cyan_bed"), (byte) 1);

  public static final Material PURPLE_BED = new Material(NamespaceID.from("minecraft:purple_bed"), (byte) 1);

  public static final Material BLUE_BED = new Material(NamespaceID.from("minecraft:blue_bed"), (byte) 1);

  public static final Material BROWN_BED = new Material(NamespaceID.from("minecraft:brown_bed"), (byte) 1);

  public static final Material GREEN_BED = new Material(NamespaceID.from("minecraft:green_bed"), (byte) 1);

  public static final Material RED_BED = new Material(NamespaceID.from("minecraft:red_bed"), (byte) 1);

  public static final Material BLACK_BED = new Material(NamespaceID.from("minecraft:black_bed"), (byte) 1);

  public static final Material COOKIE = new Material(NamespaceID.from("minecraft:cookie"), (byte) 64);

  public static final Material FILLED_MAP = new Material(NamespaceID.from("minecraft:filled_map"), (byte) 64);

  public static final Material SHEARS = new Material(NamespaceID.from("minecraft:shears"), (byte) 1);

  public static final Material MELON_SLICE = new Material(NamespaceID.from("minecraft:melon_slice"), (byte) 64);

  public static final Material DRIED_KELP = new Material(NamespaceID.from("minecraft:dried_kelp"), (byte) 64);

  public static final Material PUMPKIN_SEEDS = new Material(NamespaceID.from("minecraft:pumpkin_seeds"), (byte) 64);

  public static final Material MELON_SEEDS = new Material(NamespaceID.from("minecraft:melon_seeds"), (byte) 64);

  public static final Material BEEF = new Material(NamespaceID.from("minecraft:beef"), (byte) 64);

  public static final Material COOKED_BEEF = new Material(NamespaceID.from("minecraft:cooked_beef"), (byte) 64);

  public static final Material CHICKEN = new Material(NamespaceID.from("minecraft:chicken"), (byte) 64);

  public static final Material COOKED_CHICKEN = new Material(NamespaceID.from("minecraft:cooked_chicken"), (byte) 64);

  public static final Material ROTTEN_FLESH = new Material(NamespaceID.from("minecraft:rotten_flesh"), (byte) 64);

  public static final Material ENDER_PEARL = new Material(NamespaceID.from("minecraft:ender_pearl"), (byte) 16);

  public static final Material BLAZE_ROD = new Material(NamespaceID.from("minecraft:blaze_rod"), (byte) 64);

  public static final Material GHAST_TEAR = new Material(NamespaceID.from("minecraft:ghast_tear"), (byte) 64);

  public static final Material GOLD_NUGGET = new Material(NamespaceID.from("minecraft:gold_nugget"), (byte) 64);

  public static final Material NETHER_WART = new Material(NamespaceID.from("minecraft:nether_wart"), (byte) 64);

  public static final Material POTION = new Material(NamespaceID.from("minecraft:potion"), (byte) 1);

  public static final Material GLASS_BOTTLE = new Material(NamespaceID.from("minecraft:glass_bottle"), (byte) 64);

  public static final Material SPIDER_EYE = new Material(NamespaceID.from("minecraft:spider_eye"), (byte) 64);

  public static final Material FERMENTED_SPIDER_EYE = new Material(NamespaceID.from("minecraft:fermented_spider_eye"), (byte) 64);

  public static final Material BLAZE_POWDER = new Material(NamespaceID.from("minecraft:blaze_powder"), (byte) 64);

  public static final Material MAGMA_CREAM = new Material(NamespaceID.from("minecraft:magma_cream"), (byte) 64);

  public static final Material BREWING_STAND = new Material(NamespaceID.from("minecraft:brewing_stand"), (byte) 64);

  public static final Material CAULDRON = new Material(NamespaceID.from("minecraft:cauldron"), (byte) 64);

  public static final Material ENDER_EYE = new Material(NamespaceID.from("minecraft:ender_eye"), (byte) 64);

  public static final Material GLISTERING_MELON_SLICE = new Material(NamespaceID.from("minecraft:glistering_melon_slice"), (byte) 64);

  public static final Material BAT_SPAWN_EGG = new Material(NamespaceID.from("minecraft:bat_spawn_egg"), (byte) 64);

  public static final Material BEE_SPAWN_EGG = new Material(NamespaceID.from("minecraft:bee_spawn_egg"), (byte) 64);

  public static final Material BLAZE_SPAWN_EGG = new Material(NamespaceID.from("minecraft:blaze_spawn_egg"), (byte) 64);

  public static final Material CAT_SPAWN_EGG = new Material(NamespaceID.from("minecraft:cat_spawn_egg"), (byte) 64);

  public static final Material CAVE_SPIDER_SPAWN_EGG = new Material(NamespaceID.from("minecraft:cave_spider_spawn_egg"), (byte) 64);

  public static final Material CHICKEN_SPAWN_EGG = new Material(NamespaceID.from("minecraft:chicken_spawn_egg"), (byte) 64);

  public static final Material COD_SPAWN_EGG = new Material(NamespaceID.from("minecraft:cod_spawn_egg"), (byte) 64);

  public static final Material COW_SPAWN_EGG = new Material(NamespaceID.from("minecraft:cow_spawn_egg"), (byte) 64);

  public static final Material CREEPER_SPAWN_EGG = new Material(NamespaceID.from("minecraft:creeper_spawn_egg"), (byte) 64);

  public static final Material DOLPHIN_SPAWN_EGG = new Material(NamespaceID.from("minecraft:dolphin_spawn_egg"), (byte) 64);

  public static final Material DONKEY_SPAWN_EGG = new Material(NamespaceID.from("minecraft:donkey_spawn_egg"), (byte) 64);

  public static final Material DROWNED_SPAWN_EGG = new Material(NamespaceID.from("minecraft:drowned_spawn_egg"), (byte) 64);

  public static final Material ELDER_GUARDIAN_SPAWN_EGG = new Material(NamespaceID.from("minecraft:elder_guardian_spawn_egg"), (byte) 64);

  public static final Material ENDERMAN_SPAWN_EGG = new Material(NamespaceID.from("minecraft:enderman_spawn_egg"), (byte) 64);

  public static final Material ENDERMITE_SPAWN_EGG = new Material(NamespaceID.from("minecraft:endermite_spawn_egg"), (byte) 64);

  public static final Material EVOKER_SPAWN_EGG = new Material(NamespaceID.from("minecraft:evoker_spawn_egg"), (byte) 64);

  public static final Material FOX_SPAWN_EGG = new Material(NamespaceID.from("minecraft:fox_spawn_egg"), (byte) 64);

  public static final Material GHAST_SPAWN_EGG = new Material(NamespaceID.from("minecraft:ghast_spawn_egg"), (byte) 64);

  public static final Material GUARDIAN_SPAWN_EGG = new Material(NamespaceID.from("minecraft:guardian_spawn_egg"), (byte) 64);

  public static final Material HOGLIN_SPAWN_EGG = new Material(NamespaceID.from("minecraft:hoglin_spawn_egg"), (byte) 64);

  public static final Material HORSE_SPAWN_EGG = new Material(NamespaceID.from("minecraft:horse_spawn_egg"), (byte) 64);

  public static final Material HUSK_SPAWN_EGG = new Material(NamespaceID.from("minecraft:husk_spawn_egg"), (byte) 64);

  public static final Material LLAMA_SPAWN_EGG = new Material(NamespaceID.from("minecraft:llama_spawn_egg"), (byte) 64);

  public static final Material MAGMA_CUBE_SPAWN_EGG = new Material(NamespaceID.from("minecraft:magma_cube_spawn_egg"), (byte) 64);

  public static final Material MOOSHROOM_SPAWN_EGG = new Material(NamespaceID.from("minecraft:mooshroom_spawn_egg"), (byte) 64);

  public static final Material MULE_SPAWN_EGG = new Material(NamespaceID.from("minecraft:mule_spawn_egg"), (byte) 64);

  public static final Material OCELOT_SPAWN_EGG = new Material(NamespaceID.from("minecraft:ocelot_spawn_egg"), (byte) 64);

  public static final Material PANDA_SPAWN_EGG = new Material(NamespaceID.from("minecraft:panda_spawn_egg"), (byte) 64);

  public static final Material PARROT_SPAWN_EGG = new Material(NamespaceID.from("minecraft:parrot_spawn_egg"), (byte) 64);

  public static final Material PHANTOM_SPAWN_EGG = new Material(NamespaceID.from("minecraft:phantom_spawn_egg"), (byte) 64);

  public static final Material PIG_SPAWN_EGG = new Material(NamespaceID.from("minecraft:pig_spawn_egg"), (byte) 64);

  public static final Material PIGLIN_SPAWN_EGG = new Material(NamespaceID.from("minecraft:piglin_spawn_egg"), (byte) 64);

  public static final Material PIGLIN_BRUTE_SPAWN_EGG = new Material(NamespaceID.from("minecraft:piglin_brute_spawn_egg"), (byte) 64);

  public static final Material PILLAGER_SPAWN_EGG = new Material(NamespaceID.from("minecraft:pillager_spawn_egg"), (byte) 64);

  public static final Material POLAR_BEAR_SPAWN_EGG = new Material(NamespaceID.from("minecraft:polar_bear_spawn_egg"), (byte) 64);

  public static final Material PUFFERFISH_SPAWN_EGG = new Material(NamespaceID.from("minecraft:pufferfish_spawn_egg"), (byte) 64);

  public static final Material RABBIT_SPAWN_EGG = new Material(NamespaceID.from("minecraft:rabbit_spawn_egg"), (byte) 64);

  public static final Material RAVAGER_SPAWN_EGG = new Material(NamespaceID.from("minecraft:ravager_spawn_egg"), (byte) 64);

  public static final Material SALMON_SPAWN_EGG = new Material(NamespaceID.from("minecraft:salmon_spawn_egg"), (byte) 64);

  public static final Material SHEEP_SPAWN_EGG = new Material(NamespaceID.from("minecraft:sheep_spawn_egg"), (byte) 64);

  public static final Material SHULKER_SPAWN_EGG = new Material(NamespaceID.from("minecraft:shulker_spawn_egg"), (byte) 64);

  public static final Material SILVERFISH_SPAWN_EGG = new Material(NamespaceID.from("minecraft:silverfish_spawn_egg"), (byte) 64);

  public static final Material SKELETON_SPAWN_EGG = new Material(NamespaceID.from("minecraft:skeleton_spawn_egg"), (byte) 64);

  public static final Material SKELETON_HORSE_SPAWN_EGG = new Material(NamespaceID.from("minecraft:skeleton_horse_spawn_egg"), (byte) 64);

  public static final Material SLIME_SPAWN_EGG = new Material(NamespaceID.from("minecraft:slime_spawn_egg"), (byte) 64);

  public static final Material SPIDER_SPAWN_EGG = new Material(NamespaceID.from("minecraft:spider_spawn_egg"), (byte) 64);

  public static final Material SQUID_SPAWN_EGG = new Material(NamespaceID.from("minecraft:squid_spawn_egg"), (byte) 64);

  public static final Material STRAY_SPAWN_EGG = new Material(NamespaceID.from("minecraft:stray_spawn_egg"), (byte) 64);

  public static final Material STRIDER_SPAWN_EGG = new Material(NamespaceID.from("minecraft:strider_spawn_egg"), (byte) 64);

  public static final Material TRADER_LLAMA_SPAWN_EGG = new Material(NamespaceID.from("minecraft:trader_llama_spawn_egg"), (byte) 64);

  public static final Material TROPICAL_FISH_SPAWN_EGG = new Material(NamespaceID.from("minecraft:tropical_fish_spawn_egg"), (byte) 64);

  public static final Material TURTLE_SPAWN_EGG = new Material(NamespaceID.from("minecraft:turtle_spawn_egg"), (byte) 64);

  public static final Material VEX_SPAWN_EGG = new Material(NamespaceID.from("minecraft:vex_spawn_egg"), (byte) 64);

  public static final Material VILLAGER_SPAWN_EGG = new Material(NamespaceID.from("minecraft:villager_spawn_egg"), (byte) 64);

  public static final Material VINDICATOR_SPAWN_EGG = new Material(NamespaceID.from("minecraft:vindicator_spawn_egg"), (byte) 64);

  public static final Material WANDERING_TRADER_SPAWN_EGG = new Material(NamespaceID.from("minecraft:wandering_trader_spawn_egg"), (byte) 64);

  public static final Material WITCH_SPAWN_EGG = new Material(NamespaceID.from("minecraft:witch_spawn_egg"), (byte) 64);

  public static final Material WITHER_SKELETON_SPAWN_EGG = new Material(NamespaceID.from("minecraft:wither_skeleton_spawn_egg"), (byte) 64);

  public static final Material WOLF_SPAWN_EGG = new Material(NamespaceID.from("minecraft:wolf_spawn_egg"), (byte) 64);

  public static final Material ZOGLIN_SPAWN_EGG = new Material(NamespaceID.from("minecraft:zoglin_spawn_egg"), (byte) 64);

  public static final Material ZOMBIE_SPAWN_EGG = new Material(NamespaceID.from("minecraft:zombie_spawn_egg"), (byte) 64);

  public static final Material ZOMBIE_HORSE_SPAWN_EGG = new Material(NamespaceID.from("minecraft:zombie_horse_spawn_egg"), (byte) 64);

  public static final Material ZOMBIE_VILLAGER_SPAWN_EGG = new Material(NamespaceID.from("minecraft:zombie_villager_spawn_egg"), (byte) 64);

  public static final Material ZOMBIFIED_PIGLIN_SPAWN_EGG = new Material(NamespaceID.from("minecraft:zombified_piglin_spawn_egg"), (byte) 64);

  public static final Material EXPERIENCE_BOTTLE = new Material(NamespaceID.from("minecraft:experience_bottle"), (byte) 64);

  public static final Material FIRE_CHARGE = new Material(NamespaceID.from("minecraft:fire_charge"), (byte) 64);

  public static final Material WRITABLE_BOOK = new Material(NamespaceID.from("minecraft:writable_book"), (byte) 1);

  public static final Material WRITTEN_BOOK = new Material(NamespaceID.from("minecraft:written_book"), (byte) 16);

  public static final Material EMERALD = new Material(NamespaceID.from("minecraft:emerald"), (byte) 64);

  public static final Material ITEM_FRAME = new Material(NamespaceID.from("minecraft:item_frame"), (byte) 64);

  public static final Material FLOWER_POT = new Material(NamespaceID.from("minecraft:flower_pot"), (byte) 64);

  public static final Material CARROT = new Material(NamespaceID.from("minecraft:carrot"), (byte) 64);

  public static final Material POTATO = new Material(NamespaceID.from("minecraft:potato"), (byte) 64);

  public static final Material BAKED_POTATO = new Material(NamespaceID.from("minecraft:baked_potato"), (byte) 64);

  public static final Material POISONOUS_POTATO = new Material(NamespaceID.from("minecraft:poisonous_potato"), (byte) 64);

  public static final Material MAP = new Material(NamespaceID.from("minecraft:map"), (byte) 64);

  public static final Material GOLDEN_CARROT = new Material(NamespaceID.from("minecraft:golden_carrot"), (byte) 64);

  public static final Material SKELETON_SKULL = new Material(NamespaceID.from("minecraft:skeleton_skull"), (byte) 64);

  public static final Material WITHER_SKELETON_SKULL = new Material(NamespaceID.from("minecraft:wither_skeleton_skull"), (byte) 64);

  public static final Material PLAYER_HEAD = new Material(NamespaceID.from("minecraft:player_head"), (byte) 64);

  public static final Material ZOMBIE_HEAD = new Material(NamespaceID.from("minecraft:zombie_head"), (byte) 64);

  public static final Material CREEPER_HEAD = new Material(NamespaceID.from("minecraft:creeper_head"), (byte) 64);

  public static final Material DRAGON_HEAD = new Material(NamespaceID.from("minecraft:dragon_head"), (byte) 64);

  public static final Material CARROT_ON_A_STICK = new Material(NamespaceID.from("minecraft:carrot_on_a_stick"), (byte) 1);

  public static final Material WARPED_FUNGUS_ON_A_STICK = new Material(NamespaceID.from("minecraft:warped_fungus_on_a_stick"), (byte) 1);

  public static final Material NETHER_STAR = new Material(NamespaceID.from("minecraft:nether_star"), (byte) 64);

  public static final Material PUMPKIN_PIE = new Material(NamespaceID.from("minecraft:pumpkin_pie"), (byte) 64);

  public static final Material FIREWORK_ROCKET = new Material(NamespaceID.from("minecraft:firework_rocket"), (byte) 64);

  public static final Material FIREWORK_STAR = new Material(NamespaceID.from("minecraft:firework_star"), (byte) 64);

  public static final Material ENCHANTED_BOOK = new Material(NamespaceID.from("minecraft:enchanted_book"), (byte) 1);

  public static final Material NETHER_BRICK = new Material(NamespaceID.from("minecraft:nether_brick"), (byte) 64);

  public static final Material QUARTZ = new Material(NamespaceID.from("minecraft:quartz"), (byte) 64);

  public static final Material TNT_MINECART = new Material(NamespaceID.from("minecraft:tnt_minecart"), (byte) 1);

  public static final Material HOPPER_MINECART = new Material(NamespaceID.from("minecraft:hopper_minecart"), (byte) 1);

  public static final Material PRISMARINE_SHARD = new Material(NamespaceID.from("minecraft:prismarine_shard"), (byte) 64);

  public static final Material PRISMARINE_CRYSTALS = new Material(NamespaceID.from("minecraft:prismarine_crystals"), (byte) 64);

  public static final Material RABBIT = new Material(NamespaceID.from("minecraft:rabbit"), (byte) 64);

  public static final Material COOKED_RABBIT = new Material(NamespaceID.from("minecraft:cooked_rabbit"), (byte) 64);

  public static final Material RABBIT_STEW = new Material(NamespaceID.from("minecraft:rabbit_stew"), (byte) 1);

  public static final Material RABBIT_FOOT = new Material(NamespaceID.from("minecraft:rabbit_foot"), (byte) 64);

  public static final Material RABBIT_HIDE = new Material(NamespaceID.from("minecraft:rabbit_hide"), (byte) 64);

  public static final Material ARMOR_STAND = new Material(NamespaceID.from("minecraft:armor_stand"), (byte) 16);

  public static final Material IRON_HORSE_ARMOR = new Material(NamespaceID.from("minecraft:iron_horse_armor"), (byte) 1);

  public static final Material GOLDEN_HORSE_ARMOR = new Material(NamespaceID.from("minecraft:golden_horse_armor"), (byte) 1);

  public static final Material DIAMOND_HORSE_ARMOR = new Material(NamespaceID.from("minecraft:diamond_horse_armor"), (byte) 1);

  public static final Material LEATHER_HORSE_ARMOR = new Material(NamespaceID.from("minecraft:leather_horse_armor"), (byte) 1);

  public static final Material LEAD = new Material(NamespaceID.from("minecraft:lead"), (byte) 64);

  public static final Material NAME_TAG = new Material(NamespaceID.from("minecraft:name_tag"), (byte) 64);

  public static final Material COMMAND_BLOCK_MINECART = new Material(NamespaceID.from("minecraft:command_block_minecart"), (byte) 1);

  public static final Material MUTTON = new Material(NamespaceID.from("minecraft:mutton"), (byte) 64);

  public static final Material COOKED_MUTTON = new Material(NamespaceID.from("minecraft:cooked_mutton"), (byte) 64);

  public static final Material WHITE_BANNER = new Material(NamespaceID.from("minecraft:white_banner"), (byte) 16);

  public static final Material ORANGE_BANNER = new Material(NamespaceID.from("minecraft:orange_banner"), (byte) 16);

  public static final Material MAGENTA_BANNER = new Material(NamespaceID.from("minecraft:magenta_banner"), (byte) 16);

  public static final Material LIGHT_BLUE_BANNER = new Material(NamespaceID.from("minecraft:light_blue_banner"), (byte) 16);

  public static final Material YELLOW_BANNER = new Material(NamespaceID.from("minecraft:yellow_banner"), (byte) 16);

  public static final Material LIME_BANNER = new Material(NamespaceID.from("minecraft:lime_banner"), (byte) 16);

  public static final Material PINK_BANNER = new Material(NamespaceID.from("minecraft:pink_banner"), (byte) 16);

  public static final Material GRAY_BANNER = new Material(NamespaceID.from("minecraft:gray_banner"), (byte) 16);

  public static final Material LIGHT_GRAY_BANNER = new Material(NamespaceID.from("minecraft:light_gray_banner"), (byte) 16);

  public static final Material CYAN_BANNER = new Material(NamespaceID.from("minecraft:cyan_banner"), (byte) 16);

  public static final Material PURPLE_BANNER = new Material(NamespaceID.from("minecraft:purple_banner"), (byte) 16);

  public static final Material BLUE_BANNER = new Material(NamespaceID.from("minecraft:blue_banner"), (byte) 16);

  public static final Material BROWN_BANNER = new Material(NamespaceID.from("minecraft:brown_banner"), (byte) 16);

  public static final Material GREEN_BANNER = new Material(NamespaceID.from("minecraft:green_banner"), (byte) 16);

  public static final Material RED_BANNER = new Material(NamespaceID.from("minecraft:red_banner"), (byte) 16);

  public static final Material BLACK_BANNER = new Material(NamespaceID.from("minecraft:black_banner"), (byte) 16);

  public static final Material END_CRYSTAL = new Material(NamespaceID.from("minecraft:end_crystal"), (byte) 64);

  public static final Material CHORUS_FRUIT = new Material(NamespaceID.from("minecraft:chorus_fruit"), (byte) 64);

  public static final Material POPPED_CHORUS_FRUIT = new Material(NamespaceID.from("minecraft:popped_chorus_fruit"), (byte) 64);

  public static final Material BEETROOT = new Material(NamespaceID.from("minecraft:beetroot"), (byte) 64);

  public static final Material BEETROOT_SEEDS = new Material(NamespaceID.from("minecraft:beetroot_seeds"), (byte) 64);

  public static final Material BEETROOT_SOUP = new Material(NamespaceID.from("minecraft:beetroot_soup"), (byte) 1);

  public static final Material DRAGON_BREATH = new Material(NamespaceID.from("minecraft:dragon_breath"), (byte) 64);

  public static final Material SPLASH_POTION = new Material(NamespaceID.from("minecraft:splash_potion"), (byte) 1);

  public static final Material SPECTRAL_ARROW = new Material(NamespaceID.from("minecraft:spectral_arrow"), (byte) 64);

  public static final Material TIPPED_ARROW = new Material(NamespaceID.from("minecraft:tipped_arrow"), (byte) 64);

  public static final Material LINGERING_POTION = new Material(NamespaceID.from("minecraft:lingering_potion"), (byte) 1);

  public static final Material SHIELD = new Material(NamespaceID.from("minecraft:shield"), (byte) 1);

  public static final Material ELYTRA = new Material(NamespaceID.from("minecraft:elytra"), (byte) 1);

  public static final Material SPRUCE_BOAT = new Material(NamespaceID.from("minecraft:spruce_boat"), (byte) 1);

  public static final Material BIRCH_BOAT = new Material(NamespaceID.from("minecraft:birch_boat"), (byte) 1);

  public static final Material JUNGLE_BOAT = new Material(NamespaceID.from("minecraft:jungle_boat"), (byte) 1);

  public static final Material ACACIA_BOAT = new Material(NamespaceID.from("minecraft:acacia_boat"), (byte) 1);

  public static final Material DARK_OAK_BOAT = new Material(NamespaceID.from("minecraft:dark_oak_boat"), (byte) 1);

  public static final Material TOTEM_OF_UNDYING = new Material(NamespaceID.from("minecraft:totem_of_undying"), (byte) 1);

  public static final Material SHULKER_SHELL = new Material(NamespaceID.from("minecraft:shulker_shell"), (byte) 64);

  public static final Material IRON_NUGGET = new Material(NamespaceID.from("minecraft:iron_nugget"), (byte) 64);

  public static final Material KNOWLEDGE_BOOK = new Material(NamespaceID.from("minecraft:knowledge_book"), (byte) 1);

  public static final Material DEBUG_STICK = new Material(NamespaceID.from("minecraft:debug_stick"), (byte) 1);

  public static final Material MUSIC_DISC_13 = new Material(NamespaceID.from("minecraft:music_disc_13"), (byte) 1);

  public static final Material MUSIC_DISC_CAT = new Material(NamespaceID.from("minecraft:music_disc_cat"), (byte) 1);

  public static final Material MUSIC_DISC_BLOCKS = new Material(NamespaceID.from("minecraft:music_disc_blocks"), (byte) 1);

  public static final Material MUSIC_DISC_CHIRP = new Material(NamespaceID.from("minecraft:music_disc_chirp"), (byte) 1);

  public static final Material MUSIC_DISC_FAR = new Material(NamespaceID.from("minecraft:music_disc_far"), (byte) 1);

  public static final Material MUSIC_DISC_MALL = new Material(NamespaceID.from("minecraft:music_disc_mall"), (byte) 1);

  public static final Material MUSIC_DISC_MELLOHI = new Material(NamespaceID.from("minecraft:music_disc_mellohi"), (byte) 1);

  public static final Material MUSIC_DISC_STAL = new Material(NamespaceID.from("minecraft:music_disc_stal"), (byte) 1);

  public static final Material MUSIC_DISC_STRAD = new Material(NamespaceID.from("minecraft:music_disc_strad"), (byte) 1);

  public static final Material MUSIC_DISC_WARD = new Material(NamespaceID.from("minecraft:music_disc_ward"), (byte) 1);

  public static final Material MUSIC_DISC_11 = new Material(NamespaceID.from("minecraft:music_disc_11"), (byte) 1);

  public static final Material MUSIC_DISC_WAIT = new Material(NamespaceID.from("minecraft:music_disc_wait"), (byte) 1);

  public static final Material MUSIC_DISC_PIGSTEP = new Material(NamespaceID.from("minecraft:music_disc_pigstep"), (byte) 1);

  public static final Material TRIDENT = new Material(NamespaceID.from("minecraft:trident"), (byte) 1);

  public static final Material PHANTOM_MEMBRANE = new Material(NamespaceID.from("minecraft:phantom_membrane"), (byte) 64);

  public static final Material NAUTILUS_SHELL = new Material(NamespaceID.from("minecraft:nautilus_shell"), (byte) 64);

  public static final Material HEART_OF_THE_SEA = new Material(NamespaceID.from("minecraft:heart_of_the_sea"), (byte) 64);

  public static final Material CROSSBOW = new Material(NamespaceID.from("minecraft:crossbow"), (byte) 1);

  public static final Material SUSPICIOUS_STEW = new Material(NamespaceID.from("minecraft:suspicious_stew"), (byte) 1);

  public static final Material LOOM = new Material(NamespaceID.from("minecraft:loom"), (byte) 64);

  public static final Material FLOWER_BANNER_PATTERN = new Material(NamespaceID.from("minecraft:flower_banner_pattern"), (byte) 1);

  public static final Material CREEPER_BANNER_PATTERN = new Material(NamespaceID.from("minecraft:creeper_banner_pattern"), (byte) 1);

  public static final Material SKULL_BANNER_PATTERN = new Material(NamespaceID.from("minecraft:skull_banner_pattern"), (byte) 1);

  public static final Material MOJANG_BANNER_PATTERN = new Material(NamespaceID.from("minecraft:mojang_banner_pattern"), (byte) 1);

  public static final Material GLOBE_BANNER_PATTER = new Material(NamespaceID.from("minecraft:globe_banner_pattern"), (byte) 1);

  public static final Material PIGLIN_BANNER_PATTERN = new Material(NamespaceID.from("minecraft:piglin_banner_pattern"), (byte) 1);

  public static final Material COMPOSTER = new Material(NamespaceID.from("minecraft:composter"), (byte) 64);

  public static final Material BARREL = new Material(NamespaceID.from("minecraft:barrel"), (byte) 64);

  public static final Material SMOKER = new Material(NamespaceID.from("minecraft:smoker"), (byte) 64);

  public static final Material BLAST_FURNACE = new Material(NamespaceID.from("minecraft:blast_furnace"), (byte) 64);

  public static final Material CARTOGRAPHY_TABLE = new Material(NamespaceID.from("minecraft:cartography_table"), (byte) 64);

  public static final Material FLETCHING_TABLE = new Material(NamespaceID.from("minecraft:fletching_table"), (byte) 64);

  public static final Material GRINDSTONE = new Material(NamespaceID.from("minecraft:grindstone"), (byte) 64);

  public static final Material LECTERN = new Material(NamespaceID.from("minecraft:lectern"), (byte) 64);

  public static final Material SMITHING_TABLE = new Material(NamespaceID.from("minecraft:smithing_table"), (byte) 64);

  public static final Material STONECUTTER = new Material(NamespaceID.from("minecraft:stonecutter"), (byte) 64);

  public static final Material BELL = new Material(NamespaceID.from("minecraft:bell"), (byte) 64);

  public static final Material LANTERN = new Material(NamespaceID.from("minecraft:lantern"), (byte) 64);

  public static final Material SOUL_LANTERN = new Material(NamespaceID.from("minecraft:soul_lantern"), (byte) 64);

  public static final Material SWEET_BERRIES = new Material(NamespaceID.from("minecraft:sweet_berries"), (byte) 64);

  public static final Material CAMPFIRE = new Material(NamespaceID.from("minecraft:campfire"), (byte) 64);

  public static final Material SOUL_CAMPFIRE = new Material(NamespaceID.from("minecraft:soul_campfire"), (byte) 64);

  public static final Material SHROOMLIGHT = new Material(NamespaceID.from("minecraft:shroomlight"), (byte) 64);

  public static final Material HONEYCOMB = new Material(NamespaceID.from("minecraft:honeycomb"), (byte) 64);

  public static final Material BEE_NEST = new Material(NamespaceID.from("minecraft:bee_nest"), (byte) 64);

  public static final Material BEEHIVE = new Material(NamespaceID.from("minecraft:beehive"), (byte) 64);

  public static final Material HONEY_BOTTLE = new Material(NamespaceID.from("minecraft:honey_bottle"), (byte) 16);

  public static final Material HONEY_BLOCK = new Material(NamespaceID.from("minecraft:honey_block"), (byte) 64);

  public static final Material HONEYCOMB_BLOCK = new Material(NamespaceID.from("minecraft:honeycomb_block"), (byte) 64);

  public static final Material LODESTONE = new Material(NamespaceID.from("minecraft:lodestone"), (byte) 64);

  public static final Material NETHERITE_BLOCK = new Material(NamespaceID.from("minecraft:netherite_block"), (byte) 64);

  public static final Material ANCIENT_DEBRIS = new Material(NamespaceID.from("minecraft:ancient_debris"), (byte) 64);

  public static final Material TARGET = new Material(NamespaceID.from("minecraft:target"), (byte) 64);

  public static final Material CRYING_OBSIDIAN = new Material(NamespaceID.from("minecraft:crying_obsidian"), (byte) 64);

  public static final Material BLACKSTONE = new Material(NamespaceID.from("minecraft:blackstone"), (byte) 64);

  public static final Material BLACKSTONE_SLAB = new Material(NamespaceID.from("minecraft:blackstone_slab"), (byte) 64);

  public static final Material BLACKSTONE_STAIRS = new Material(NamespaceID.from("minecraft:blackstone_stairs"), (byte) 64);

  public static final Material GILDED_BLACKSTONE = new Material(NamespaceID.from("minecraft:gilded_blackstone"), (byte) 64);

  public static final Material POLISHED_BLACKSTONE = new Material(NamespaceID.from("minecraft:polished_blackstone"), (byte) 64);

  public static final Material POLISHED_BLACKSTONE_SLAB = new Material(NamespaceID.from("minecraft:polished_blackstone_slab"), (byte) 64);

  public static final Material POLISHED_BLACKSTONE_STAIRS = new Material(NamespaceID.from("minecraft:polished_blackstone_stairs"), (byte) 64);

  public static final Material CHISELED_POLISHED_BLACKSTONE = new Material(NamespaceID.from("minecraft:chiseled_polished_blackstone"), (byte) 64);

  public static final Material POLISHED_BLACKSTONE_BRICKS = new Material(NamespaceID.from("minecraft:polished_blackstone_bricks"), (byte) 64);

  public static final Material POLISHED_BLACKSTONE_BRICK_SLAB = new Material(NamespaceID.from("minecraft:polished_blackstone_brick_slab"), (byte) 64);

  public static final Material POLISHED_BLACKSTONE_BRICK_STAIRS = new Material(NamespaceID.from("minecraft:polished_blackstone_brick_stairs"), (byte) 64);

  public static final Material CRACKED_POLISHED_BLACKSTONE_BRICKS = new Material(NamespaceID.from("minecraft:cracked_polished_blackstone_bricks"), (byte) 64);

  public static final Material RESPAWN_ANCHOR = new Material(NamespaceID.from("minecraft:respawn_anchor"), (byte) 64);

  static {
    Registries.registerMaterial(AIR);
    Registries.registerMaterial(STONE);
    Registries.registerMaterial(GRANITE);
    Registries.registerMaterial(POLISHED_GRANITE);
    Registries.registerMaterial(DIORITE);
    Registries.registerMaterial(POLISHED_DIORITE);
    Registries.registerMaterial(ANDESITE);
    Registries.registerMaterial(POLISHED_ANDESITE);
    Registries.registerMaterial(GRASS_BLOCK);
    Registries.registerMaterial(DIRT);
    Registries.registerMaterial(COARSE_DIRT);
    Registries.registerMaterial(PODZOL);
    Registries.registerMaterial(CRIMSON_NYLIUM);
    Registries.registerMaterial(WARPED_NYLIUM);
    Registries.registerMaterial(COBBLESTONE);
    Registries.registerMaterial(OAK_PLANKS);
    Registries.registerMaterial(SPRUCE_PLANKS);
    Registries.registerMaterial(BIRCH_PLANKS);
    Registries.registerMaterial(JUNGLE_PLANKS);
    Registries.registerMaterial(ACACIA_PLANKS);
    Registries.registerMaterial(DARK_OAK_PLANKS);
    Registries.registerMaterial(CRIMSON_PLANKS);
    Registries.registerMaterial(WARPED_PLANKS);
    Registries.registerMaterial(OAK_SAPLING);
    Registries.registerMaterial(SPRUCE_SAPLING);
    Registries.registerMaterial(BIRCH_SAPLING);
    Registries.registerMaterial(JUNGLE_SAPLING);
    Registries.registerMaterial(ACACIA_SAPLING);
    Registries.registerMaterial(DARK_OAK_SAPLING);
    Registries.registerMaterial(BEDROCK);
    Registries.registerMaterial(SAND);
    Registries.registerMaterial(RED_SAND);
    Registries.registerMaterial(GRAVEL);
    Registries.registerMaterial(GOLD_ORE);
    Registries.registerMaterial(IRON_ORE);
    Registries.registerMaterial(COAL_ORE);
    Registries.registerMaterial(NETHER_GOLD_ORE);
    Registries.registerMaterial(OAK_LOG);
    Registries.registerMaterial(SPRUCE_LOG);
    Registries.registerMaterial(BIRCH_LOG);
    Registries.registerMaterial(JUNGLE_LOG);
    Registries.registerMaterial(ACACIA_LOG);
    Registries.registerMaterial(DARK_OAK_LOG);
    Registries.registerMaterial(CRIMSON_STEM);
    Registries.registerMaterial(WARPED_STEM);
    Registries.registerMaterial(STRIPPED_OAK_LOG);
    Registries.registerMaterial(STRIPPED_SPRUCE_LOG);
    Registries.registerMaterial(STRIPPED_BIRCH_LOG);
    Registries.registerMaterial(STRIPPED_JUNGLE_LOG);
    Registries.registerMaterial(STRIPPED_ACACIA_LOG);
    Registries.registerMaterial(STRIPPED_DARK_OAK_LOG);
    Registries.registerMaterial(STRIPPED_CRIMSON_STEM);
    Registries.registerMaterial(STRIPPED_WARPED_STEM);
    Registries.registerMaterial(STRIPPED_OAK_WOOD);
    Registries.registerMaterial(STRIPPED_SPRUCE_WOOD);
    Registries.registerMaterial(STRIPPED_BIRCH_WOOD);
    Registries.registerMaterial(STRIPPED_JUNGLE_WOOD);
    Registries.registerMaterial(STRIPPED_ACACIA_WOOD);
    Registries.registerMaterial(STRIPPED_DARK_OAK_WOOD);
    Registries.registerMaterial(STRIPPED_CRIMSON_HYPHAE);
    Registries.registerMaterial(STRIPPED_WARPED_HYPHAE);
    Registries.registerMaterial(OAK_WOOD);
    Registries.registerMaterial(SPRUCE_WOOD);
    Registries.registerMaterial(BIRCH_WOOD);
    Registries.registerMaterial(JUNGLE_WOOD);
    Registries.registerMaterial(ACACIA_WOOD);
    Registries.registerMaterial(DARK_OAK_WOOD);
    Registries.registerMaterial(CRIMSON_HYPHAE);
    Registries.registerMaterial(WARPED_HYPHAE);
    Registries.registerMaterial(OAK_LEAVES);
    Registries.registerMaterial(SPRUCE_LEAVES);
    Registries.registerMaterial(BIRCH_LEAVES);
    Registries.registerMaterial(JUNGLE_LEAVES);
    Registries.registerMaterial(ACACIA_LEAVES);
    Registries.registerMaterial(DARK_OAK_LEAVES);
    Registries.registerMaterial(SPONGE);
    Registries.registerMaterial(WET_SPONGE);
    Registries.registerMaterial(GLASS);
    Registries.registerMaterial(LAPIS_ORE);
    Registries.registerMaterial(LAPIS_BLOCK);
    Registries.registerMaterial(DISPENSER);
    Registries.registerMaterial(SANDSTONE);
    Registries.registerMaterial(CHISELED_SANDSTONE);
    Registries.registerMaterial(CUT_SANDSTONE);
    Registries.registerMaterial(NOTE_BLOCK);
    Registries.registerMaterial(POWERED_RAIL);
    Registries.registerMaterial(DETECTOR_RAIL);
    Registries.registerMaterial(STICKY_PISTON);
    Registries.registerMaterial(COBWEB);
    Registries.registerMaterial(GRASS);
    Registries.registerMaterial(FERN);
    Registries.registerMaterial(DEAD_BUSH);
    Registries.registerMaterial(SEAGRASS);
    Registries.registerMaterial(SEA_PICKLE);
    Registries.registerMaterial(PISTON);
    Registries.registerMaterial(WHITE_WOOL);
    Registries.registerMaterial(ORANGE_WOOL);
    Registries.registerMaterial(MAGENTA_WOOL);
    Registries.registerMaterial(LIGHT_BLUE_WOOL);
    Registries.registerMaterial(YELLOW_WOOL);
    Registries.registerMaterial(LIME_WOOL);
    Registries.registerMaterial(PINK_WOOL);
    Registries.registerMaterial(GRAY_WOOL);
    Registries.registerMaterial(LIGHT_GRAY_WOOL);
    Registries.registerMaterial(CYAN_WOOL);
    Registries.registerMaterial(PURPLE_WOOL);
    Registries.registerMaterial(BLUE_WOOL);
    Registries.registerMaterial(BROWN_WOOL);
    Registries.registerMaterial(GREEN_WOOL);
    Registries.registerMaterial(RED_WOOL);
    Registries.registerMaterial(BLACK_WOOL);
    Registries.registerMaterial(DANDELION);
    Registries.registerMaterial(POPPY);
    Registries.registerMaterial(BLUE_ORCHID);
    Registries.registerMaterial(ALLIUM);
    Registries.registerMaterial(AZURE_BLUET);
    Registries.registerMaterial(RED_TULIP);
    Registries.registerMaterial(ORANGE_TULIP);
    Registries.registerMaterial(WHITE_TULIP);
    Registries.registerMaterial(PINK_TULIP);
    Registries.registerMaterial(OXEYE_DAISY);
    Registries.registerMaterial(CORNFLOWER);
    Registries.registerMaterial(LILY_OF_THE_VALLEY);
    Registries.registerMaterial(WITHER_ROSE);
    Registries.registerMaterial(BROWN_MUSHROOM);
    Registries.registerMaterial(RED_MUSHROOM);
    Registries.registerMaterial(CRIMSON_FUNGUS);
    Registries.registerMaterial(WARPED_FUNGUS);
    Registries.registerMaterial(CRIMSON_ROOTS);
    Registries.registerMaterial(WARPED_ROOTS);
    Registries.registerMaterial(NETHER_SPROUTS);
    Registries.registerMaterial(WEEPING_VINES);
    Registries.registerMaterial(TWISTING_VINES);
    Registries.registerMaterial(SUGAR_CANE);
    Registries.registerMaterial(KELP);
    Registries.registerMaterial(BAMBOO);
    Registries.registerMaterial(GOLD_BLOCK);
    Registries.registerMaterial(IRON_BLOCK);
    Registries.registerMaterial(OAK_SLAB);
    Registries.registerMaterial(SPRUCE_SLAB);
    Registries.registerMaterial(BIRCH_SLAB);
    Registries.registerMaterial(JUNGLE_SLAB);
    Registries.registerMaterial(ACACIA_SLAB);
    Registries.registerMaterial(DARK_OAK_SLAB);
    Registries.registerMaterial(CRIMSON_SLAB);
    Registries.registerMaterial(WARPED_SLAB);
    Registries.registerMaterial(STONE_SLAB);
    Registries.registerMaterial(SMOOTH_STONE_SLAB);
    Registries.registerMaterial(SANDSTONE_SLAB);
    Registries.registerMaterial(CUT_STANDSTONE_SLAB);
    Registries.registerMaterial(PETRIFIED_OAK_SLAB);
    Registries.registerMaterial(COBBLESTONE_SLAB);
    Registries.registerMaterial(BRICK_SLAB);
    Registries.registerMaterial(STONE_BRICK_SLAB);
    Registries.registerMaterial(NETHER_BRICK_SLAB);
    Registries.registerMaterial(QUARTZ_SLAB);
    Registries.registerMaterial(RED_SANDSTONE_SLAB);
    Registries.registerMaterial(CUT_RED_SANDSTONE_SLAB);
    Registries.registerMaterial(PURPUR_SLAB);
    Registries.registerMaterial(PRISMARINE_SLAB);
    Registries.registerMaterial(PRISMARINE_BRICK_SLAB);
    Registries.registerMaterial(DARK_PRISMARINE_SLAB);
    Registries.registerMaterial(SMOOTH_QUARTZ);
    Registries.registerMaterial(SMOOTH_RED_SANDSTONE);
    Registries.registerMaterial(SMOOTH_SANDSTONE);
    Registries.registerMaterial(SMOOTH_STONE);
    Registries.registerMaterial(BRICKS);
    Registries.registerMaterial(TNT);
    Registries.registerMaterial(BOOKSHELF);
    Registries.registerMaterial(MOSSY_COBBLESTONE);
    Registries.registerMaterial(OBSIDIAN);
    Registries.registerMaterial(TORCH);
    Registries.registerMaterial(END_ROD);
    Registries.registerMaterial(CHORUS_PLANT);
    Registries.registerMaterial(CHORUS_FLOWER);
    Registries.registerMaterial(PURPUR_BLOCK);
    Registries.registerMaterial(PURPUR_PILLAR);
    Registries.registerMaterial(PURPUR_STAIRS);
    Registries.registerMaterial(SPAWNER);
    Registries.registerMaterial(OAK_STAIRS);
    Registries.registerMaterial(CHEST);
    Registries.registerMaterial(DIAMOND_ORE);
    Registries.registerMaterial(DIAMOND_BLOCK);
    Registries.registerMaterial(CRAFTING_TABLE);
    Registries.registerMaterial(FARMLAND);
    Registries.registerMaterial(FURNACE);
    Registries.registerMaterial(LADDER);
    Registries.registerMaterial(RAIL);
    Registries.registerMaterial(COBBLESTONE_STAIRS);
    Registries.registerMaterial(LEVER);
    Registries.registerMaterial(STONE_PRESSURE_PLATE);
    Registries.registerMaterial(OAK_PRESSURE_PLATE);
    Registries.registerMaterial(SPRUCE_PRESSURE_PLATE);
    Registries.registerMaterial(BIRCH_PRESSURE_PLATE);
    Registries.registerMaterial(JUNGLE_PRESSURE_PLATE);
    Registries.registerMaterial(ACACIA_PRESSURE_PLATE);
    Registries.registerMaterial(DARK_OAK_PRESSURE_PLATE);
    Registries.registerMaterial(CRIMSON_PRESSURE_PLATE);
    Registries.registerMaterial(WARPED_PRESSURE_PLATE);
    Registries.registerMaterial(POLISHED_BLACKSTONE_PRESSURE_PLATE);
    Registries.registerMaterial(REDSTONE_ORE);
    Registries.registerMaterial(REDSTONE_TORCH);
    Registries.registerMaterial(SNOW);
    Registries.registerMaterial(ICE);
    Registries.registerMaterial(SNOW_BLOCK);
    Registries.registerMaterial(CACTUS);
    Registries.registerMaterial(CLAY);
    Registries.registerMaterial(JUKEBOX);
    Registries.registerMaterial(OAK_FENCE);
    Registries.registerMaterial(SPRUCE_FENCE);
    Registries.registerMaterial(BIRCH_FENCE);
    Registries.registerMaterial(JUNGLE_FENCE);
    Registries.registerMaterial(ACACIA_FENCE);
    Registries.registerMaterial(DARK_OAK_FENCE);
    Registries.registerMaterial(CRIMSON_FENCE);
    Registries.registerMaterial(WARPED_FENCE);
    Registries.registerMaterial(PUMPKIN);
    Registries.registerMaterial(CARVED_PUMPKIN);
    Registries.registerMaterial(NETHERRACK);
    Registries.registerMaterial(SOUL_SAND);
    Registries.registerMaterial(SOUL_SOIL);
    Registries.registerMaterial(BASALT);
    Registries.registerMaterial(POLISHED_BASALT);
    Registries.registerMaterial(SOUL_TORCH);
    Registries.registerMaterial(GLOWSTONE);
    Registries.registerMaterial(JACK_O_LANTERN);
    Registries.registerMaterial(OAK_TRAPDOOR);
    Registries.registerMaterial(SPRUCE_TRAPDOOR);
    Registries.registerMaterial(BIRCH_TRAPDOOR);
    Registries.registerMaterial(JUNGLE_TRAPDOOR);
    Registries.registerMaterial(ACACIA_TRAPDOOR);
    Registries.registerMaterial(DARK_OAK_TRAPDOOR);
    Registries.registerMaterial(CRIMSON_TRAPDOOR);
    Registries.registerMaterial(WARPED_TRAPDOOR);
    Registries.registerMaterial(INFESTED_STONE);
    Registries.registerMaterial(INFESTED_COBBLESTONE);
    Registries.registerMaterial(INFESTED_STONE_BRICKS);
    Registries.registerMaterial(INFESTED_MOSSY_STONE_BRICKS);
    Registries.registerMaterial(INFESTED_CRACKED_STONE_BRICKS);
    Registries.registerMaterial(INFESTED_CHISELED_STONE_BRICKS);
    Registries.registerMaterial(STONE_BRICKS);
    Registries.registerMaterial(MOSSY_STONE_BRICKS);
    Registries.registerMaterial(CRACKED_STONE_BRICKS);
    Registries.registerMaterial(CHISELED_STONE_BRICKS);
    Registries.registerMaterial(BROWN_MUSHROOM_BLOCK);
    Registries.registerMaterial(RED_MUSHROOM_BLOCK);
    Registries.registerMaterial(MUSHROOM_STEM);
    Registries.registerMaterial(IRON_BARS);
    Registries.registerMaterial(CHAIN);
    Registries.registerMaterial(GLASS_PANE);
    Registries.registerMaterial(MELON);
    Registries.registerMaterial(VINE);
    Registries.registerMaterial(OAK_FENCE_GATE);
    Registries.registerMaterial(SPRUCE_FENCE_GATE);
    Registries.registerMaterial(BIRCH_FENCE_GATE);
    Registries.registerMaterial(JUNGLE_FENCE_GATE);
    Registries.registerMaterial(ACACIA_FENCE_GATE);
    Registries.registerMaterial(DARK_OAK_FENCE_GATE);
    Registries.registerMaterial(CRIMSON_FENCE_GATE);
    Registries.registerMaterial(WARPED_FENCE_GATE);
    Registries.registerMaterial(BRICK_STAIRS);
    Registries.registerMaterial(STONE_BRICK_STAIRS);
    Registries.registerMaterial(MYCELIUM);
    Registries.registerMaterial(LILY_PAD);
    Registries.registerMaterial(NETHER_BRICKS);
    Registries.registerMaterial(CRACKED_NETHER_BRICKS);
    Registries.registerMaterial(CHISELED_NETHER_BRICKS);
    Registries.registerMaterial(NETHER_BRICK_FENCE);
    Registries.registerMaterial(NETHER_BRICK_STAIRS);
    Registries.registerMaterial(ENCHANTING_TABLE);
    Registries.registerMaterial(END_PORTAL_FRAME);
    Registries.registerMaterial(END_STONE);
    Registries.registerMaterial(END_STONE_BRICKS);
    Registries.registerMaterial(DRAGON_EGG);
    Registries.registerMaterial(REDSTONE_LAMP);
    Registries.registerMaterial(SANDSTONE_STAIRS);
    Registries.registerMaterial(EMERALD_ORE);
    Registries.registerMaterial(ENDER_CHEST);
    Registries.registerMaterial(TRIPWIRE_HOOK);
    Registries.registerMaterial(EMERALD_BLOCK);
    Registries.registerMaterial(SPRUCE_STAIRS);
    Registries.registerMaterial(BIRCH_STAIRS);
    Registries.registerMaterial(JUNGLE_STAIRS);
    Registries.registerMaterial(CRIMSON_STAIRS);
    Registries.registerMaterial(WARPED_STAIRS);
    Registries.registerMaterial(COMMAND_BLOCK);
    Registries.registerMaterial(BEACON);
    Registries.registerMaterial(COBBLESTONE_WALL);
    Registries.registerMaterial(MOSSY_COBBLESTONE_WALL);
    Registries.registerMaterial(BRICK_WALL);
    Registries.registerMaterial(PRISMARINE_WALL);
    Registries.registerMaterial(RED_SANDSTONE_WALL);
    Registries.registerMaterial(MOSSY_STONE_BRICK_WALL);
    Registries.registerMaterial(GRANITE_WALL);
    Registries.registerMaterial(STONE_BRICK_WALL);
    Registries.registerMaterial(NETHER_BRICK_WALL);
    Registries.registerMaterial(ANDESITE_WALL);
    Registries.registerMaterial(RED_NETHER_BRICK_WALL);
    Registries.registerMaterial(SANDSTONE_WALL);
    Registries.registerMaterial(END_STONE_BRICK_WALL);
    Registries.registerMaterial(DIORITE_WALL);
    Registries.registerMaterial(BLACKSTONE_WALL);
    Registries.registerMaterial(POLISHED_BLACKSTONE_WALL);
    Registries.registerMaterial(POLISHED_BLACKSTONE_BRICK_WALL);
    Registries.registerMaterial(STONE_BUTTON);
    Registries.registerMaterial(OAK_BUTTON);
    Registries.registerMaterial(SPRUCE_BUTTON);
    Registries.registerMaterial(BIRCH_BUTTON);
    Registries.registerMaterial(JUNGLE_BUTTON);
    Registries.registerMaterial(ACACIA_BUTTON);
    Registries.registerMaterial(DARK_OAK_BUTTON);
    Registries.registerMaterial(CRIMSON_BUTTON);
    Registries.registerMaterial(WARPED_BUTTON);
    Registries.registerMaterial(POLISHED_BLACKSTONE_BUTTON);
    Registries.registerMaterial(ANVIL);
    Registries.registerMaterial(CHIPPED_ANVIL);
    Registries.registerMaterial(DAMAGED_ANVIL);
    Registries.registerMaterial(TRAPPED_CHEST);
    Registries.registerMaterial(LIGHT_WEIGHTED_PRESSURE_PLATE);
    Registries.registerMaterial(HEAVY_WEIGHTED_PRESSURE_PLATE);
    Registries.registerMaterial(DAYLIGHT_DETECTOR);
    Registries.registerMaterial(REDSTONE_BLOCK);
    Registries.registerMaterial(NETHER_QUARTZ_ORE);
    Registries.registerMaterial(HOPPER);
    Registries.registerMaterial(CHISELED_QUARTZ_BLOCK);
    Registries.registerMaterial(QUARTZ_BLOCK);
    Registries.registerMaterial(QUARTZ_BRICKS);
    Registries.registerMaterial(QUARTZ_PILLAR);
    Registries.registerMaterial(QUARTZ_STAIRS);
    Registries.registerMaterial(ACTIVATOR_RAIL);
    Registries.registerMaterial(DROPPER);
    Registries.registerMaterial(WHITE_TERRACOTTA);
    Registries.registerMaterial(ORANGE_TERRACOTTA);
    Registries.registerMaterial(MAGENTA_TERRACOTTA);
    Registries.registerMaterial(LIGHT_BLUE_TERRACOTTA);
    Registries.registerMaterial(YELLOW_TERRACOTTA);
    Registries.registerMaterial(LIME_TERRACOTTA);
    Registries.registerMaterial(PINK_TERRACOTTA);
    Registries.registerMaterial(GRAY_TERRACOTTA);
    Registries.registerMaterial(LIGHT_GRAY_TERRACOTTA);
    Registries.registerMaterial(CYAN_TERRACOTTA);
    Registries.registerMaterial(PURPLE_TERRACOTTA);
    Registries.registerMaterial(BLUE_TERRACOTTA);
    Registries.registerMaterial(BROWN_TERRACOTTA);
    Registries.registerMaterial(GREEN_TERRACOTTA);
    Registries.registerMaterial(RED_TERRACOTTA);
    Registries.registerMaterial(BLACK_TERRACOTTA);
    Registries.registerMaterial(BARRIER);
    Registries.registerMaterial(IRON_TRAPDOOR);
    Registries.registerMaterial(HAY_BLOCK);
    Registries.registerMaterial(WHITE_CARPET);
    Registries.registerMaterial(ORANGE_CARPET);
    Registries.registerMaterial(MAGENTA_CARPET);
    Registries.registerMaterial(LIGHT_BLUE_CARPET);
    Registries.registerMaterial(YELLOW_CARPET);
    Registries.registerMaterial(LIME_CARPET);
    Registries.registerMaterial(PINK_CARPET);
    Registries.registerMaterial(GRAY_CARPET);
    Registries.registerMaterial(LIGHT_GRAY_CARPET);
    Registries.registerMaterial(CYAN_CARPET);
    Registries.registerMaterial(PURPLE_CARPET);
    Registries.registerMaterial(BLUE_CARPET);
    Registries.registerMaterial(BROWN_CARPET);
    Registries.registerMaterial(GREEN_CARPET);
    Registries.registerMaterial(RED_CARPET);
    Registries.registerMaterial(BLACK_CARPET);
    Registries.registerMaterial(TERRACOTTA);
    Registries.registerMaterial(COAL_BLOCK);
    Registries.registerMaterial(PACKED_ICE);
    Registries.registerMaterial(ACACIA_STAIRS);
    Registries.registerMaterial(DARK_OAK_STAIRS);
    Registries.registerMaterial(SLIME_BLOCK);
    Registries.registerMaterial(GRASS_PATH);
    Registries.registerMaterial(SUNFLOWER);
    Registries.registerMaterial(LILAC);
    Registries.registerMaterial(ROSE_BUSH);
    Registries.registerMaterial(PEONY);
    Registries.registerMaterial(TALL_GRASS);
    Registries.registerMaterial(LARGE_FERN);
    Registries.registerMaterial(WHITE_STAINED_GLASS);
    Registries.registerMaterial(ORANGE_STAINED_GLASS);
    Registries.registerMaterial(MAGENTA_STAINED_GLASS);
    Registries.registerMaterial(LIGHT_BLUE_STAINED_GLASS);
    Registries.registerMaterial(YELLOW_STAINED_GLASS);
    Registries.registerMaterial(LIME_STAINED_GLASS);
    Registries.registerMaterial(PINK_STAINED_GLASS);
    Registries.registerMaterial(GRAY_STAINED_GLASS);
    Registries.registerMaterial(LIGHT_GRAY_STAINED_GLASS);
    Registries.registerMaterial(CYAN_STAINED_GLASS);
    Registries.registerMaterial(PURPLE_STAINED_GLASS);
    Registries.registerMaterial(BLUE_STAINED_GLASS);
    Registries.registerMaterial(BROWN_STAINED_GLASS);
    Registries.registerMaterial(GREEN_STAINED_GLASS);
    Registries.registerMaterial(RED_STAINED_GLASS);
    Registries.registerMaterial(BLACK_STAINED_GLASS);
    Registries.registerMaterial(WHITE_STAINED_GLASS_PANE);
    Registries.registerMaterial(ORANGE_STAINED_GLASS_PANE);
    Registries.registerMaterial(MAGENTA_STAINED_GLASS_PANE);
    Registries.registerMaterial(LIGHT_BLUE_STAINED_GLASS_PANE);
    Registries.registerMaterial(YELLOW_STAINED_GLASS_PANE);
    Registries.registerMaterial(LIME_STAINED_GLASS_PANE);
    Registries.registerMaterial(PINK_STAINED_GLASS_PANE);
    Registries.registerMaterial(GRAY_STAINED_GLASS_PANE);
    Registries.registerMaterial(LIGHT_GRAY_STAINED_GLASS_PANE);
    Registries.registerMaterial(CYAN_STAINED_GLASS_PANE);
    Registries.registerMaterial(PURPLE_STAINED_GLASS_PANE);
    Registries.registerMaterial(BLUE_STAINED_GLASS_PANE);
    Registries.registerMaterial(BROWN_STAINED_GLASS_PANE);
    Registries.registerMaterial(GREEN_STAINED_GLASS_PANE);
    Registries.registerMaterial(RED_STAINED_GLASS_PANE);
    Registries.registerMaterial(BLACK_STAINED_GLASS_PANE);
    Registries.registerMaterial(PRISMARINE);
    Registries.registerMaterial(PRISMARINE_BRICKS);
    Registries.registerMaterial(DARK_PRISMARINE);
    Registries.registerMaterial(PRISMARINE_STAIRS);
    Registries.registerMaterial(PRISMARINE_BRICK_STAIRS);
    Registries.registerMaterial(DARK_PRISMARINE_STAIRS);
    Registries.registerMaterial(SEA_LANTERN);
    Registries.registerMaterial(RED_SANDSTONE);
    Registries.registerMaterial(CHISELED_RED_SANDSTONE);
    Registries.registerMaterial(CUT_RED_SANDSTONE);
    Registries.registerMaterial(RED_SANDSTONE_STAIRS);
    Registries.registerMaterial(REPEATING_COMMAND_BLOCK);
    Registries.registerMaterial(CHAIN_COMMAND_BLOCK);
    Registries.registerMaterial(MAGMA_BLOCK);
    Registries.registerMaterial(NETHER_WART_BLOCK);
    Registries.registerMaterial(WARPED_WART_BLOCK);
    Registries.registerMaterial(RED_NETHER_BRICKS);
    Registries.registerMaterial(BONE_BLOCK);
    Registries.registerMaterial(STRUCTURE_VOID);
    Registries.registerMaterial(OBSERVER);
    Registries.registerMaterial(SHULKER_BOX);
    Registries.registerMaterial(WHITE_SHULKER_BOX);
    Registries.registerMaterial(ORANGE_SHULKER_BOX);
    Registries.registerMaterial(MAGENTA_SHULKER_BOX);
    Registries.registerMaterial(LIGHT_BLUE_SHULKER_BOX);
    Registries.registerMaterial(YELLOW_SHULKER_BOX);
    Registries.registerMaterial(LIME_SHULKER_BOX);
    Registries.registerMaterial(PINK_SHULKER_BOX);
    Registries.registerMaterial(GRAY_SHULKER_BOX);
    Registries.registerMaterial(LIGHT_GRAY_SHULKER_BOX);
    Registries.registerMaterial(CYAN_SHULKER_BOX);
    Registries.registerMaterial(PURPLE_SHULKER_BOX);
    Registries.registerMaterial(BLUE_SHULKER_BOX);
    Registries.registerMaterial(BROWN_SHULKER_BOX);
    Registries.registerMaterial(GREEN_SHULKER_BOX);
    Registries.registerMaterial(RED_SHULKER_BOX);
    Registries.registerMaterial(BLACK_SHULKER_BOX);
    Registries.registerMaterial(WHITE_GLAZED_TERRACOTTA);
    Registries.registerMaterial(ORANGE_GLAZED_TERRACOTTA);
    Registries.registerMaterial(MAGENTA_GLAZED_TERRACOTTA);
    Registries.registerMaterial(LIGHT_BLUE_GLAZED_TERRACOTTA);
    Registries.registerMaterial(YELLOW_GLAZED_TERRACOTTA);
    Registries.registerMaterial(LIME_GLAZED_TERRACOTTA);
    Registries.registerMaterial(PINK_GLAZED_TERRACOTTA);
    Registries.registerMaterial(GRAY_GLAZED_TERRACOTTA);
    Registries.registerMaterial(LIGHT_GRAY_GLAZED_TERRACOTTA);
    Registries.registerMaterial(CYAN_GLAZED_TERRACOTTA);
    Registries.registerMaterial(PURPLE_GLAZED_TERRACOTTA);
    Registries.registerMaterial(BLUE_GLAZED_TERRACOTTA);
    Registries.registerMaterial(BROWN_GLAZED_TERRACOTTA);
    Registries.registerMaterial(GREEN_GLAZED_TERRACOTTA);
    Registries.registerMaterial(RED_GLAZED_TERRACOTTA);
    Registries.registerMaterial(BLACK_GLAZED_TERRACOTTA);
    Registries.registerMaterial(WHITE_CONCRETE);
    Registries.registerMaterial(ORANGE_CONCRETE);
    Registries.registerMaterial(MAGENTA_CONCRETE);
    Registries.registerMaterial(LIGHT_BLUE_CONCRETE);
    Registries.registerMaterial(YELLOW_CONCRETE);
    Registries.registerMaterial(LIME_CONCRETE);
    Registries.registerMaterial(PINK_CONCRETE);
    Registries.registerMaterial(GRAY_CONCRETE);
    Registries.registerMaterial(LIGHT_GRAY_CONCRETE);
    Registries.registerMaterial(CYAN_CONCRETE);
    Registries.registerMaterial(PURPLE_CONCRETE);
    Registries.registerMaterial(BLUE_CONCRETE);
    Registries.registerMaterial(BROWN_CONCRETE);
    Registries.registerMaterial(GREEN_CONCRETE);
    Registries.registerMaterial(RED_CONCRETE);
    Registries.registerMaterial(BLACK_CONCRETE);
    Registries.registerMaterial(WHITE_CONCRETE_POWDER);
    Registries.registerMaterial(ORANGE_CONCRETE_POWDER);
    Registries.registerMaterial(MAGENTA_CONCRETE_POWDER);
    Registries.registerMaterial(LIGHT_BLUE_CONCRETE_POWDER);
    Registries.registerMaterial(YELLOW_CONCRETE_POWDER);
    Registries.registerMaterial(LIME_CONCRETE_POWDER);
    Registries.registerMaterial(PINK_CONCRETE_POWDER);
    Registries.registerMaterial(GRAY_CONCRETE_POWDER);
    Registries.registerMaterial(LIGHT_GRAY_CONCRETE_POWDER);
    Registries.registerMaterial(CYAN_CONCRETE_POWDER);
    Registries.registerMaterial(PURPLE_CONCRETE_POWDER);
    Registries.registerMaterial(BLUE_CONCRETE_POWDER);
    Registries.registerMaterial(BROWN_CONCRETE_POWDER);
    Registries.registerMaterial(GREEN_CONCRETE_POWDER);
    Registries.registerMaterial(RED_CONCRETE_POWDER);
    Registries.registerMaterial(BLACK_CONCRETE_POWDER);
    Registries.registerMaterial(TURTLE_EGG);
    Registries.registerMaterial(DEAD_TUBE_CORAL_BLOCK);
    Registries.registerMaterial(DEAD_BRAIN_CORAL_BLOCK);
    Registries.registerMaterial(DEAD_BUBBLE_CORAL_BLOCK);
    Registries.registerMaterial(DEAD_FIRE_CORAL_BLOCK);
    Registries.registerMaterial(DEAD_HORN_CORAL_BLOCK);
    Registries.registerMaterial(TUBE_CORAL_BLOCK);
    Registries.registerMaterial(BRAIN_CORAL_BLOCK);
    Registries.registerMaterial(BUBBLE_CORAL_BLOCK);
    Registries.registerMaterial(FIRE_CORAL_BLOCK);
    Registries.registerMaterial(HORN_CORAL_BLOCK);
    Registries.registerMaterial(TUBE_CORAL);
    Registries.registerMaterial(BRAIN_CORAL);
    Registries.registerMaterial(BUBBLE_CORAL);
    Registries.registerMaterial(FIRE_CORAL);
    Registries.registerMaterial(HORN_CORAL);
    Registries.registerMaterial(DEAD_BRAIN_CORAL);
    Registries.registerMaterial(DEAD_BUBBLE_CORAL);
    Registries.registerMaterial(DEAD_FIRE_CORAL);
    Registries.registerMaterial(DEAD_HORN_CORAL);
    Registries.registerMaterial(DEAD_TUBE_CORAL);
    Registries.registerMaterial(TUBE_CORAL_FAN);
    Registries.registerMaterial(BRAIN_CORAL_FAN);
    Registries.registerMaterial(BUBBLE_CORAL_FAN);
    Registries.registerMaterial(FIRE_CORAL_FAN);
    Registries.registerMaterial(HORN_CORAL_FAN);
    Registries.registerMaterial(DEAD_TUBE_CORAL_FAN);
    Registries.registerMaterial(DEAD_BRAIN_CORAL_FAN);
    Registries.registerMaterial(DEAD_BUBBLE_CORAL_FAN);
    Registries.registerMaterial(DEAD_FIRE_CORAL_FAN);
    Registries.registerMaterial(DEAD_HORN_CORAL_FAN);
    Registries.registerMaterial(BLUE_ICE);
    Registries.registerMaterial(CONDUIT);
    Registries.registerMaterial(POLISHED_GRANITE_STAIRS);
    Registries.registerMaterial(SMOOTH_RED_SANDSTONE_STAIRS);
    Registries.registerMaterial(MOSSY_STONE_BRICK_STAIRS);
    Registries.registerMaterial(POLISHED_DIORITE_STAIRS);
    Registries.registerMaterial(MOSSY_COBBLESTONE_STAIRS);
    Registries.registerMaterial(END_STONE_BRICK_STAIRS);
    Registries.registerMaterial(STONE_STAIRS);
    Registries.registerMaterial(SMOOTH_SANDSTONE_STAIRS);
    Registries.registerMaterial(SMOOTH_QUARTZ_STAIRS);
    Registries.registerMaterial(GRANITE_STAIRS);
    Registries.registerMaterial(ANDESITE_STAIRS);
    Registries.registerMaterial(RED_NETHER_BRICK_STAIRS);
    Registries.registerMaterial(POLISHED_ANDESITE_STAIRS);
    Registries.registerMaterial(DIORITE_STAIRS);
    Registries.registerMaterial(POLISHED_GRANITE_SLAB);
    Registries.registerMaterial(SMOOTH_RED_SANDSTONE_SLAB);
    Registries.registerMaterial(MOSSY_STONE_BRICK_SLAB);
    Registries.registerMaterial(POLISHED_DIORITE_SLAB);
    Registries.registerMaterial(MOSSY_COBBLESTONE_SLAB);
    Registries.registerMaterial(END_STONE_BRICK_SLAB);
    Registries.registerMaterial(SMOOTH_SANDSTONE_SLAB);
    Registries.registerMaterial(SMOOTH_QUARTZ_SLAB);
    Registries.registerMaterial(GRANITE_SLAB);
    Registries.registerMaterial(ANDESITE_SLAB);
    Registries.registerMaterial(RED_NETHER_BRICK_SLAB);
    Registries.registerMaterial(POLISHED_ANDESITE_SLAB);
    Registries.registerMaterial(DIORITE_SLAB);
    Registries.registerMaterial(SCAFFOLDING);
    Registries.registerMaterial(IRON_DOOR);
    Registries.registerMaterial(OAK_DOOR);
    Registries.registerMaterial(SPRUCE_DOOR);
    Registries.registerMaterial(BIRCH_DOOR);
    Registries.registerMaterial(JUNGLE_DOOR);
    Registries.registerMaterial(ACACIA_DOOR);
    Registries.registerMaterial(DARK_OAK_DOOR);
    Registries.registerMaterial(CRIMSON_DOOR);
    Registries.registerMaterial(WARPED_DOOR);
    Registries.registerMaterial(REPEATER);
    Registries.registerMaterial(COMPARATOR);
    Registries.registerMaterial(STRUCTURE_BLOCK);
    Registries.registerMaterial(JIGSAW);
    Registries.registerMaterial(TURTLE_HELMET);
    Registries.registerMaterial(SCUTE);
    Registries.registerMaterial(FLINT_AND_STEEL);
    Registries.registerMaterial(APPLE);
    Registries.registerMaterial(BOW);
    Registries.registerMaterial(ARROW);
    Registries.registerMaterial(COAL);
    Registries.registerMaterial(CHARCOAL);
    Registries.registerMaterial(DIAMOND);
    Registries.registerMaterial(IRON_INGOT);
    Registries.registerMaterial(GOLD_INGOT);
    Registries.registerMaterial(NETHERITE_INGOT);
    Registries.registerMaterial(NETHERITE_SCRAP);
    Registries.registerMaterial(WOODEN_SWORD);
    Registries.registerMaterial(WOODEN_SHOVEL);
    Registries.registerMaterial(WOODEN_PICKAXE);
    Registries.registerMaterial(WOODEN_AXE);
    Registries.registerMaterial(WOODEN_HOE);
    Registries.registerMaterial(STONE_SWORD);
    Registries.registerMaterial(STONE_SHOVEL);
    Registries.registerMaterial(STONE_PICKAXE);
    Registries.registerMaterial(STONE_AXE);
    Registries.registerMaterial(STONE_HOE);
    Registries.registerMaterial(GOLDEN_SWORD);
    Registries.registerMaterial(GOLDEN_SHOVEL);
    Registries.registerMaterial(GOLDEN_PICKAXE);
    Registries.registerMaterial(GOLDEN_AXE);
    Registries.registerMaterial(GOLDEN_HOE);
    Registries.registerMaterial(IRON_SWORD);
    Registries.registerMaterial(IRON_SHOVEL);
    Registries.registerMaterial(IRON_PICKAXE);
    Registries.registerMaterial(IRON_AXE);
    Registries.registerMaterial(IRON_HOE);
    Registries.registerMaterial(DIAMOND_SWORD);
    Registries.registerMaterial(DIAMOND_SHOVEL);
    Registries.registerMaterial(DIAMOND_PICKAXE);
    Registries.registerMaterial(DIAMOND_AXE);
    Registries.registerMaterial(DIAMOND_HOE);
    Registries.registerMaterial(NETHERITE_SWORD);
    Registries.registerMaterial(NETHERITE_SHOVEL);
    Registries.registerMaterial(NETHERITE_PICKAXE);
    Registries.registerMaterial(NETHERITE_AXE);
    Registries.registerMaterial(NETHERITE_HOE);
    Registries.registerMaterial(STICK);
    Registries.registerMaterial(BOWL);
    Registries.registerMaterial(MUSHROOM_STEW);
    Registries.registerMaterial(STRING);
    Registries.registerMaterial(FEATHER);
    Registries.registerMaterial(GUNPOWDER);
    Registries.registerMaterial(WHEAT_SEEDS);
    Registries.registerMaterial(WHEAT);
    Registries.registerMaterial(BREAD);
    Registries.registerMaterial(LEATHER_HELMET);
    Registries.registerMaterial(LEATHER_CHESTPLATE);
    Registries.registerMaterial(LEATHER_LEGGINGS);
    Registries.registerMaterial(LEATHER_BOOTS);
    Registries.registerMaterial(CHAINMAIL_HELMET);
    Registries.registerMaterial(CHAINMAIL_CHESTPLATE);
    Registries.registerMaterial(CHAINMAIL_LEGGINGS);
    Registries.registerMaterial(CHAINMAIL_BOOTS);
    Registries.registerMaterial(IRON_HELMET);
    Registries.registerMaterial(IRON_CHESTPLATE);
    Registries.registerMaterial(IRON_LEGGINGS);
    Registries.registerMaterial(IRON_BOOTS);
    Registries.registerMaterial(DIAMOND_HELMET);
    Registries.registerMaterial(DIAMOND_CHESTPLATE);
    Registries.registerMaterial(DIAMOND_LEGGINGS);
    Registries.registerMaterial(DIAMOND_BOOTS);
    Registries.registerMaterial(GOLDEN_HELMET);
    Registries.registerMaterial(GOLDEN_CHESTPLATE);
    Registries.registerMaterial(GOLDEN_LEGGINGS);
    Registries.registerMaterial(GOLDEN_BOOTS);
    Registries.registerMaterial(NETHERITE_HELMET);
    Registries.registerMaterial(NETHERITE_CHESTPLATE);
    Registries.registerMaterial(NETHERITE_LEGGINGS);
    Registries.registerMaterial(NETHERITE_BOOTS);
    Registries.registerMaterial(FLINT);
    Registries.registerMaterial(PORKCHOP);
    Registries.registerMaterial(COOKED_PORKCHOP);
    Registries.registerMaterial(PAINTING);
    Registries.registerMaterial(GOLDEN_APPLE);
    Registries.registerMaterial(ENCHANTED_GOLDEN_APPLE);
    Registries.registerMaterial(OAK_SIGN);
    Registries.registerMaterial(SPRUCE_SIGN);
    Registries.registerMaterial(BIRCH_SIGN);
    Registries.registerMaterial(JUNGLE_SIGN);
    Registries.registerMaterial(ACACIA_SIGN);
    Registries.registerMaterial(DARK_OAK_SIGN);
    Registries.registerMaterial(CRIMSON_SIGN);
    Registries.registerMaterial(WARPED_SIGN);
    Registries.registerMaterial(BUCKET);
    Registries.registerMaterial(WATER_BUCKET);
    Registries.registerMaterial(LAVA_BUCKET);
    Registries.registerMaterial(MINECART);
    Registries.registerMaterial(SADDLE);
    Registries.registerMaterial(REDSTONE);
    Registries.registerMaterial(SNOWBALL);
    Registries.registerMaterial(OAK_BOAT);
    Registries.registerMaterial(LEATHER);
    Registries.registerMaterial(MILK_BUCKET);
    Registries.registerMaterial(PUFFERFISH_BUCKET);
    Registries.registerMaterial(SALMON_BUCKET);
    Registries.registerMaterial(COD_BUCKET);
    Registries.registerMaterial(TROPICAL_FISH_BUCKET);
    Registries.registerMaterial(BRICK);
    Registries.registerMaterial(CLAY_BALL);
    Registries.registerMaterial(DRIED_KELP_BLOCK);
    Registries.registerMaterial(PAPER);
    Registries.registerMaterial(BOOK);
    Registries.registerMaterial(SLIME_BALL);
    Registries.registerMaterial(CHEST_MINECART);
    Registries.registerMaterial(FURNACE_MINECART);
    Registries.registerMaterial(EGG);
    Registries.registerMaterial(COMPASS);
    Registries.registerMaterial(FISHING_ROD);
    Registries.registerMaterial(CLOCK);
    Registries.registerMaterial(GLOWSTONE_DUST);
    Registries.registerMaterial(COD);
    Registries.registerMaterial(SALMON);
    Registries.registerMaterial(TROPICAL_FISH);
    Registries.registerMaterial(PUFFERFISH);
    Registries.registerMaterial(COOKED_COD);
    Registries.registerMaterial(COOKED_SALMON);
    Registries.registerMaterial(INK_SAC);
    Registries.registerMaterial(COCOA_BEANS);
    Registries.registerMaterial(LAPIS_LAZULI);
    Registries.registerMaterial(WHITE_DYE);
    Registries.registerMaterial(ORANGE_DYE);
    Registries.registerMaterial(MAGENTA_DYE);
    Registries.registerMaterial(LIGHT_BLUE_DYE);
    Registries.registerMaterial(YELLOW_DYE);
    Registries.registerMaterial(LIME_DYE);
    Registries.registerMaterial(PINK_DYE);
    Registries.registerMaterial(GRAY_DYE);
    Registries.registerMaterial(LIGHT_GRAY_DYE);
    Registries.registerMaterial(CYAN_DYE);
    Registries.registerMaterial(PURPLE_DYE);
    Registries.registerMaterial(BLUE_DYE);
    Registries.registerMaterial(BROWN_DYE);
    Registries.registerMaterial(GREEN_DYE);
    Registries.registerMaterial(RED_DYE);
    Registries.registerMaterial(BLACK_DYE);
    Registries.registerMaterial(BONE_MEAL);
    Registries.registerMaterial(BONE);
    Registries.registerMaterial(SUGAR);
    Registries.registerMaterial(CAKE);
    Registries.registerMaterial(WHITE_BED);
    Registries.registerMaterial(ORANGE_BED);
    Registries.registerMaterial(MAGENTA_BED);
    Registries.registerMaterial(LIGHT_BLUE_BED);
    Registries.registerMaterial(YELLOW_BED);
    Registries.registerMaterial(LIME_BED);
    Registries.registerMaterial(PINK_BED);
    Registries.registerMaterial(GRAY_BED);
    Registries.registerMaterial(LIGHT_GRAY_BED);
    Registries.registerMaterial(CYAN_BED);
    Registries.registerMaterial(PURPLE_BED);
    Registries.registerMaterial(BLUE_BED);
    Registries.registerMaterial(BROWN_BED);
    Registries.registerMaterial(GREEN_BED);
    Registries.registerMaterial(RED_BED);
    Registries.registerMaterial(BLACK_BED);
    Registries.registerMaterial(COOKIE);
    Registries.registerMaterial(FILLED_MAP);
    Registries.registerMaterial(SHEARS);
    Registries.registerMaterial(MELON_SLICE);
    Registries.registerMaterial(DRIED_KELP);
    Registries.registerMaterial(PUMPKIN_SEEDS);
    Registries.registerMaterial(MELON_SEEDS);
    Registries.registerMaterial(BEEF);
    Registries.registerMaterial(COOKED_BEEF);
    Registries.registerMaterial(CHICKEN);
    Registries.registerMaterial(COOKED_CHICKEN);
    Registries.registerMaterial(ROTTEN_FLESH);
    Registries.registerMaterial(ENDER_PEARL);
    Registries.registerMaterial(BLAZE_ROD);
    Registries.registerMaterial(GHAST_TEAR);
    Registries.registerMaterial(GOLD_NUGGET);
    Registries.registerMaterial(NETHER_WART);
    Registries.registerMaterial(POTION);
    Registries.registerMaterial(GLASS_BOTTLE);
    Registries.registerMaterial(SPIDER_EYE);
    Registries.registerMaterial(FERMENTED_SPIDER_EYE);
    Registries.registerMaterial(BLAZE_POWDER);
    Registries.registerMaterial(MAGMA_CREAM);
    Registries.registerMaterial(BREWING_STAND);
    Registries.registerMaterial(CAULDRON);
    Registries.registerMaterial(ENDER_EYE);
    Registries.registerMaterial(GLISTERING_MELON_SLICE);
    Registries.registerMaterial(BAT_SPAWN_EGG);
    Registries.registerMaterial(BEE_SPAWN_EGG);
    Registries.registerMaterial(BLAZE_SPAWN_EGG);
    Registries.registerMaterial(CAT_SPAWN_EGG);
    Registries.registerMaterial(CAVE_SPIDER_SPAWN_EGG);
    Registries.registerMaterial(CHICKEN_SPAWN_EGG);
    Registries.registerMaterial(COD_SPAWN_EGG);
    Registries.registerMaterial(COW_SPAWN_EGG);
    Registries.registerMaterial(CREEPER_SPAWN_EGG);
    Registries.registerMaterial(DOLPHIN_SPAWN_EGG);
    Registries.registerMaterial(DONKEY_SPAWN_EGG);
    Registries.registerMaterial(DROWNED_SPAWN_EGG);
    Registries.registerMaterial(ELDER_GUARDIAN_SPAWN_EGG);
    Registries.registerMaterial(ENDERMAN_SPAWN_EGG);
    Registries.registerMaterial(ENDERMITE_SPAWN_EGG);
    Registries.registerMaterial(EVOKER_SPAWN_EGG);
    Registries.registerMaterial(FOX_SPAWN_EGG);
    Registries.registerMaterial(GHAST_SPAWN_EGG);
    Registries.registerMaterial(GUARDIAN_SPAWN_EGG);
    Registries.registerMaterial(HOGLIN_SPAWN_EGG);
    Registries.registerMaterial(HORSE_SPAWN_EGG);
    Registries.registerMaterial(HUSK_SPAWN_EGG);
    Registries.registerMaterial(LLAMA_SPAWN_EGG);
    Registries.registerMaterial(MAGMA_CUBE_SPAWN_EGG);
    Registries.registerMaterial(MOOSHROOM_SPAWN_EGG);
    Registries.registerMaterial(MULE_SPAWN_EGG);
    Registries.registerMaterial(OCELOT_SPAWN_EGG);
    Registries.registerMaterial(PANDA_SPAWN_EGG);
    Registries.registerMaterial(PARROT_SPAWN_EGG);
    Registries.registerMaterial(PHANTOM_SPAWN_EGG);
    Registries.registerMaterial(PIG_SPAWN_EGG);
    Registries.registerMaterial(PIGLIN_SPAWN_EGG);
    Registries.registerMaterial(PIGLIN_BRUTE_SPAWN_EGG);
    Registries.registerMaterial(PILLAGER_SPAWN_EGG);
    Registries.registerMaterial(POLAR_BEAR_SPAWN_EGG);
    Registries.registerMaterial(PUFFERFISH_SPAWN_EGG);
    Registries.registerMaterial(RABBIT_SPAWN_EGG);
    Registries.registerMaterial(RAVAGER_SPAWN_EGG);
    Registries.registerMaterial(SALMON_SPAWN_EGG);
    Registries.registerMaterial(SHEEP_SPAWN_EGG);
    Registries.registerMaterial(SHULKER_SPAWN_EGG);
    Registries.registerMaterial(SILVERFISH_SPAWN_EGG);
    Registries.registerMaterial(SKELETON_SPAWN_EGG);
    Registries.registerMaterial(SKELETON_HORSE_SPAWN_EGG);
    Registries.registerMaterial(SLIME_SPAWN_EGG);
    Registries.registerMaterial(SPIDER_SPAWN_EGG);
    Registries.registerMaterial(SQUID_SPAWN_EGG);
    Registries.registerMaterial(STRAY_SPAWN_EGG);
    Registries.registerMaterial(STRIDER_SPAWN_EGG);
    Registries.registerMaterial(TRADER_LLAMA_SPAWN_EGG);
    Registries.registerMaterial(TROPICAL_FISH_SPAWN_EGG);
    Registries.registerMaterial(TURTLE_SPAWN_EGG);
    Registries.registerMaterial(VEX_SPAWN_EGG);
    Registries.registerMaterial(VILLAGER_SPAWN_EGG);
    Registries.registerMaterial(VINDICATOR_SPAWN_EGG);
    Registries.registerMaterial(WANDERING_TRADER_SPAWN_EGG);
    Registries.registerMaterial(WITCH_SPAWN_EGG);
    Registries.registerMaterial(WITHER_SKELETON_SPAWN_EGG);
    Registries.registerMaterial(WOLF_SPAWN_EGG);
    Registries.registerMaterial(ZOGLIN_SPAWN_EGG);
    Registries.registerMaterial(ZOMBIE_SPAWN_EGG);
    Registries.registerMaterial(ZOMBIE_HORSE_SPAWN_EGG);
    Registries.registerMaterial(ZOMBIE_VILLAGER_SPAWN_EGG);
    Registries.registerMaterial(ZOMBIFIED_PIGLIN_SPAWN_EGG);
    Registries.registerMaterial(EXPERIENCE_BOTTLE);
    Registries.registerMaterial(FIRE_CHARGE);
    Registries.registerMaterial(WRITABLE_BOOK);
    Registries.registerMaterial(WRITTEN_BOOK);
    Registries.registerMaterial(EMERALD);
    Registries.registerMaterial(ITEM_FRAME);
    Registries.registerMaterial(FLOWER_POT);
    Registries.registerMaterial(CARROT);
    Registries.registerMaterial(POTATO);
    Registries.registerMaterial(BAKED_POTATO);
    Registries.registerMaterial(POISONOUS_POTATO);
    Registries.registerMaterial(MAP);
    Registries.registerMaterial(GOLDEN_CARROT);
    Registries.registerMaterial(SKELETON_SKULL);
    Registries.registerMaterial(WITHER_SKELETON_SKULL);
    Registries.registerMaterial(PLAYER_HEAD);
    Registries.registerMaterial(ZOMBIE_HEAD);
    Registries.registerMaterial(CREEPER_HEAD);
    Registries.registerMaterial(DRAGON_HEAD);
    Registries.registerMaterial(CARROT_ON_A_STICK);
    Registries.registerMaterial(WARPED_FUNGUS_ON_A_STICK);
    Registries.registerMaterial(NETHER_STAR);
    Registries.registerMaterial(PUMPKIN_PIE);
    Registries.registerMaterial(FIREWORK_ROCKET);
    Registries.registerMaterial(FIREWORK_STAR);
    Registries.registerMaterial(ENCHANTED_BOOK);
    Registries.registerMaterial(NETHER_BRICK);
    Registries.registerMaterial(QUARTZ);
    Registries.registerMaterial(TNT_MINECART);
    Registries.registerMaterial(HOPPER_MINECART);
    Registries.registerMaterial(PRISMARINE_SHARD);
    Registries.registerMaterial(PRISMARINE_CRYSTALS);
    Registries.registerMaterial(RABBIT);
    Registries.registerMaterial(COOKED_RABBIT);
    Registries.registerMaterial(RABBIT_STEW);
    Registries.registerMaterial(RABBIT_FOOT);
    Registries.registerMaterial(RABBIT_HIDE);
    Registries.registerMaterial(ARMOR_STAND);
    Registries.registerMaterial(IRON_HORSE_ARMOR);
    Registries.registerMaterial(GOLDEN_HORSE_ARMOR);
    Registries.registerMaterial(DIAMOND_HORSE_ARMOR);
    Registries.registerMaterial(LEATHER_HORSE_ARMOR);
    Registries.registerMaterial(LEAD);
    Registries.registerMaterial(NAME_TAG);
    Registries.registerMaterial(COMMAND_BLOCK_MINECART);
    Registries.registerMaterial(MUTTON);
    Registries.registerMaterial(COOKED_MUTTON);
    Registries.registerMaterial(WHITE_BANNER);
    Registries.registerMaterial(ORANGE_BANNER);
    Registries.registerMaterial(MAGENTA_BANNER);
    Registries.registerMaterial(LIGHT_BLUE_BANNER);
    Registries.registerMaterial(YELLOW_BANNER);
    Registries.registerMaterial(LIME_BANNER);
    Registries.registerMaterial(PINK_BANNER);
    Registries.registerMaterial(GRAY_BANNER);
    Registries.registerMaterial(LIGHT_GRAY_BANNER);
    Registries.registerMaterial(CYAN_BANNER);
    Registries.registerMaterial(PURPLE_BANNER);
    Registries.registerMaterial(BLUE_BANNER);
    Registries.registerMaterial(BROWN_BANNER);
    Registries.registerMaterial(GREEN_BANNER);
    Registries.registerMaterial(RED_BANNER);
    Registries.registerMaterial(BLACK_BANNER);
    Registries.registerMaterial(END_CRYSTAL);
    Registries.registerMaterial(CHORUS_FRUIT);
    Registries.registerMaterial(POPPED_CHORUS_FRUIT);
    Registries.registerMaterial(BEETROOT);
    Registries.registerMaterial(BEETROOT_SEEDS);
    Registries.registerMaterial(BEETROOT_SOUP);
    Registries.registerMaterial(DRAGON_BREATH);
    Registries.registerMaterial(SPLASH_POTION);
    Registries.registerMaterial(SPECTRAL_ARROW);
    Registries.registerMaterial(TIPPED_ARROW);
    Registries.registerMaterial(LINGERING_POTION);
    Registries.registerMaterial(SHIELD);
    Registries.registerMaterial(ELYTRA);
    Registries.registerMaterial(SPRUCE_BOAT);
    Registries.registerMaterial(BIRCH_BOAT);
    Registries.registerMaterial(JUNGLE_BOAT);
    Registries.registerMaterial(ACACIA_BOAT);
    Registries.registerMaterial(DARK_OAK_BOAT);
    Registries.registerMaterial(TOTEM_OF_UNDYING);
    Registries.registerMaterial(SHULKER_SHELL);
    Registries.registerMaterial(IRON_NUGGET);
    Registries.registerMaterial(KNOWLEDGE_BOOK);
    Registries.registerMaterial(DEBUG_STICK);
    Registries.registerMaterial(MUSIC_DISC_13);
    Registries.registerMaterial(MUSIC_DISC_CAT);
    Registries.registerMaterial(MUSIC_DISC_BLOCKS);
    Registries.registerMaterial(MUSIC_DISC_CHIRP);
    Registries.registerMaterial(MUSIC_DISC_FAR);
    Registries.registerMaterial(MUSIC_DISC_MALL);
    Registries.registerMaterial(MUSIC_DISC_MELLOHI);
    Registries.registerMaterial(MUSIC_DISC_STAL);
    Registries.registerMaterial(MUSIC_DISC_STRAD);
    Registries.registerMaterial(MUSIC_DISC_WARD);
    Registries.registerMaterial(MUSIC_DISC_11);
    Registries.registerMaterial(MUSIC_DISC_WAIT);
    Registries.registerMaterial(MUSIC_DISC_PIGSTEP);
    Registries.registerMaterial(TRIDENT);
    Registries.registerMaterial(PHANTOM_MEMBRANE);
    Registries.registerMaterial(NAUTILUS_SHELL);
    Registries.registerMaterial(HEART_OF_THE_SEA);
    Registries.registerMaterial(CROSSBOW);
    Registries.registerMaterial(SUSPICIOUS_STEW);
    Registries.registerMaterial(LOOM);
    Registries.registerMaterial(FLOWER_BANNER_PATTERN);
    Registries.registerMaterial(CREEPER_BANNER_PATTERN);
    Registries.registerMaterial(SKULL_BANNER_PATTERN);
    Registries.registerMaterial(MOJANG_BANNER_PATTERN);
    Registries.registerMaterial(GLOBE_BANNER_PATTER);
    Registries.registerMaterial(PIGLIN_BANNER_PATTERN);
    Registries.registerMaterial(COMPOSTER);
    Registries.registerMaterial(BARREL);
    Registries.registerMaterial(SMOKER);
    Registries.registerMaterial(BLAST_FURNACE);
    Registries.registerMaterial(CARTOGRAPHY_TABLE);
    Registries.registerMaterial(FLETCHING_TABLE);
    Registries.registerMaterial(GRINDSTONE);
    Registries.registerMaterial(LECTERN);
    Registries.registerMaterial(SMITHING_TABLE);
    Registries.registerMaterial(STONECUTTER);
    Registries.registerMaterial(BELL);
    Registries.registerMaterial(LANTERN);
    Registries.registerMaterial(SOUL_LANTERN);
    Registries.registerMaterial(SWEET_BERRIES);
    Registries.registerMaterial(CAMPFIRE);
    Registries.registerMaterial(SOUL_CAMPFIRE);
    Registries.registerMaterial(SHROOMLIGHT);
    Registries.registerMaterial(HONEYCOMB);
    Registries.registerMaterial(BEE_NEST);
    Registries.registerMaterial(BEEHIVE);
    Registries.registerMaterial(HONEY_BOTTLE);
    Registries.registerMaterial(HONEY_BLOCK);
    Registries.registerMaterial(HONEYCOMB_BLOCK);
    Registries.registerMaterial(LODESTONE);
    Registries.registerMaterial(NETHERITE_BLOCK);
    Registries.registerMaterial(ANCIENT_DEBRIS);
    Registries.registerMaterial(TARGET);
    Registries.registerMaterial(CRYING_OBSIDIAN);
    Registries.registerMaterial(BLACKSTONE);
    Registries.registerMaterial(BLACKSTONE_SLAB);
    Registries.registerMaterial(BLACKSTONE_STAIRS);
    Registries.registerMaterial(GILDED_BLACKSTONE);
    Registries.registerMaterial(POLISHED_BLACKSTONE);
    Registries.registerMaterial(POLISHED_BLACKSTONE_SLAB);
    Registries.registerMaterial(POLISHED_BLACKSTONE_STAIRS);
    Registries.registerMaterial(CHISELED_POLISHED_BLACKSTONE);
    Registries.registerMaterial(POLISHED_BLACKSTONE_BRICKS);
    Registries.registerMaterial(POLISHED_BLACKSTONE_BRICK_SLAB);
    Registries.registerMaterial(POLISHED_BLACKSTONE_BRICK_STAIRS);
    Registries.registerMaterial(CRACKED_POLISHED_BLACKSTONE_BRICKS);
    Registries.registerMaterial(RESPAWN_ANCHOR);
  }

  @NotNull
  private final NamespaceID id;

  private final byte defaultStackSize;

  @NotNull
  private final RawMaterialData materialData = new RawMaterialData();

  protected Material(@NotNull NamespaceID id, byte defaultStackSize) {
    this.id = id;
    this.defaultStackSize = defaultStackSize;
  }

  @Override
  @NotNull
  public Key key() {
    return this.id;
  }

  @NotNull
  public NamespaceID getId() {
    return this.id;
  }

  @NotNull
  public String getName() {
    return this.id.asString();
  }

  public int getNumericalId() {
    return Registries.getMaterialId(this);
  }

  public byte getDefaultStackSize() {
    return this.defaultStackSize;
  }

  @NotNull
  public static Material fromId(int id) {
    return Registries.getMaterial(id);
  }

  @NotNull
  public final RawMaterialData getMaterialData() {
    return this.materialData;
  }

  public boolean isFood() {
    return this.materialData.edible;
  }

  public boolean hasState() {
    if (this == BOW || this == TRIDENT || this == CROSSBOW || this == SHIELD) {
      return true;
    } else {
      return isFood();
    }
  }

  public boolean isBlock() {
    return this.materialData.block != Block.AIR;
  }

  public boolean isArmor() {
    return this.materialData.armorData != null;
  }

  public boolean isHelmet() {
    return this.isArmor() && this.materialData.armorData.slot == EntityEquipmentPacket.Slot.HELMET;
  }

  public boolean isChestplate() {
    return this.isArmor() && this.materialData.armorData.slot == EntityEquipmentPacket.Slot.CHESTPLATE;
  }

  public boolean isLeggings() {
    return this.isArmor() && this.materialData.armorData.slot == EntityEquipmentPacket.Slot.LEGGINGS;
  }

  public boolean isBoots() {
    return this.isArmor() && this.materialData.armorData.slot == EntityEquipmentPacket.Slot.BOOTS;
  }

  @NotNull
  public Block getBlock() {
    return this.materialData.block;
  }

  @NotNull
  public static List<Material> values() {
    return Registries.getMaterials();
  }
}
