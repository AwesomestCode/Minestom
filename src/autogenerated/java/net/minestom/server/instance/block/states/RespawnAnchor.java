package net.minestom.server.instance.block.states;

import java.lang.Deprecated;
import net.minestom.server.instance.block.Block;
import net.minestom.server.instance.block.BlockState;
import net.minestom.server.raw_data.RawBlockStateData;
import net.minestom.server.registry.Registry;
import net.minestom.server.utils.NamespaceID;

/**
 * AUTOGENERATED by BlockGenerator
 */
@Deprecated(
        since = "forever",
        forRemoval = false
)
public final class RespawnAnchor {
    public static final BlockState RESPAWN_ANCHOR_0 = new BlockState(NamespaceID.from("minecraft:respawn_anchor_0"), (short) 15837, Block.RESPAWN_ANCHOR, new RawBlockStateData(50.0, 0, true, "NORMAL", true, false, false, false, true, true, 11, "[AABB[0.0, 0.0, 0.0] -> [1.0, 1.0, 1.0]]"), "charges=0");

    public static final BlockState RESPAWN_ANCHOR_1 = new BlockState(NamespaceID.from("minecraft:respawn_anchor_1"), (short) 15838, Block.RESPAWN_ANCHOR, new RawBlockStateData(50.0, 3, true, "NORMAL", true, false, false, false, true, true, 11, "[AABB[0.0, 0.0, 0.0] -> [1.0, 1.0, 1.0]]"), "charges=1");

    public static final BlockState RESPAWN_ANCHOR_2 = new BlockState(NamespaceID.from("minecraft:respawn_anchor_2"), (short) 15839, Block.RESPAWN_ANCHOR, new RawBlockStateData(50.0, 7, true, "NORMAL", true, false, false, false, true, true, 11, "[AABB[0.0, 0.0, 0.0] -> [1.0, 1.0, 1.0]]"), "charges=2");

    public static final BlockState RESPAWN_ANCHOR_3 = new BlockState(NamespaceID.from("minecraft:respawn_anchor_3"), (short) 15840, Block.RESPAWN_ANCHOR, new RawBlockStateData(50.0, 11, true, "NORMAL", true, false, false, false, true, true, 11, "[AABB[0.0, 0.0, 0.0] -> [1.0, 1.0, 1.0]]"), "charges=3");

    public static final BlockState RESPAWN_ANCHOR_4 = new BlockState(NamespaceID.from("minecraft:respawn_anchor_4"), (short) 15841, Block.RESPAWN_ANCHOR, new RawBlockStateData(50.0, 15, true, "NORMAL", true, false, false, false, true, true, 11, "[AABB[0.0, 0.0, 0.0] -> [1.0, 1.0, 1.0]]"), "charges=4");

    static {
        Registry.BLOCK_STATE_REGISTRY.register(RESPAWN_ANCHOR_0);
        Registry.BLOCK_STATE_REGISTRY.register(RESPAWN_ANCHOR_1);
        Registry.BLOCK_STATE_REGISTRY.register(RESPAWN_ANCHOR_2);
        Registry.BLOCK_STATE_REGISTRY.register(RESPAWN_ANCHOR_3);
        Registry.BLOCK_STATE_REGISTRY.register(RESPAWN_ANCHOR_4);
    }

    public static void initStates() {
        Block.RESPAWN_ANCHOR.addBlockState(RESPAWN_ANCHOR_0);
        Block.RESPAWN_ANCHOR.addBlockState(RESPAWN_ANCHOR_1);
        Block.RESPAWN_ANCHOR.addBlockState(RESPAWN_ANCHOR_2);
        Block.RESPAWN_ANCHOR.addBlockState(RESPAWN_ANCHOR_3);
        Block.RESPAWN_ANCHOR.addBlockState(RESPAWN_ANCHOR_4);
    }
}
