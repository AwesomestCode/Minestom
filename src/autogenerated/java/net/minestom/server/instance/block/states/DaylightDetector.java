package net.minestom.server.instance.block.states;

import java.lang.Deprecated;
import net.minestom.server.instance.block.Block;
import net.minestom.server.instance.block.BlockState;

/**
 * AUTOGENERATED
 */
@Deprecated(
    since = "forever",
    forRemoval = false
)
public final class DaylightDetector {
  public static void initStates() {
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6698, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6699, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6700, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6701, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6702, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6703, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6704, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6705, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6706, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6707, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6708, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6709, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6710, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6711, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6712, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6713, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6714, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6715, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6716, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6717, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6718, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6719, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6720, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6721, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6722, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6723, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6724, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6725, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6726, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6727, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6728, Block.DAYLIGHT_DETECTOR));
    Block.DAYLIGHT_DETECTOR.addBlockState(new BlockState((short) 6729, Block.DAYLIGHT_DETECTOR));
  }
}
