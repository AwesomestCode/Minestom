package net.minestom.server.instance.block.states;

import java.lang.Deprecated;
import net.minestom.server.instance.block.Block;
import net.minestom.server.instance.block.BlockState;

/**
 * AUTOGENERATED
 */
@Deprecated(
    since = "forever",
    forRemoval = false
)
public final class Scaffolding {
  public static void initStates() {
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14759, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14760, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14761, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14762, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14763, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14764, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14765, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14766, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14767, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14768, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14769, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14770, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14771, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14772, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14773, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14774, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14775, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14776, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14777, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14778, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14779, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14780, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14781, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14782, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14783, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14784, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14785, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14786, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14787, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14788, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14789, Block.SCAFFOLDING));
    Block.SCAFFOLDING.addBlockState(new BlockState((short) 14790, Block.SCAFFOLDING));
  }
}
