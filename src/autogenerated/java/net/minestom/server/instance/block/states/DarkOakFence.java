package net.minestom.server.instance.block.states;

import java.lang.Deprecated;
import net.minestom.server.instance.block.Block;
import net.minestom.server.instance.block.BlockState;

/**
 * AUTOGENERATED
 */
@Deprecated(
    since = "forever",
    forRemoval = false
)
public final class DarkOakFence {
  public static void initStates() {
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8710, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8711, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8712, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8713, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8714, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8715, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8716, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8717, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8718, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8719, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8720, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8721, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8722, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8723, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8724, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8725, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8726, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8727, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8728, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8729, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8730, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8731, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8732, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8733, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8734, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8735, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8736, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8737, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8738, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8739, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8740, Block.DARK_OAK_FENCE));
    Block.DARK_OAK_FENCE.addBlockState(new BlockState((short) 8741, Block.DARK_OAK_FENCE));
  }
}
